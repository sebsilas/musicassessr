[{"path":"https://sebsilas.github.io/musicassessr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Seb Silas Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/accuracy_vs_similarity_measures.html","id":"foundations-of-accuracy-style-measures","dir":"Articles","previous_headings":"","what":"1. Foundations of accuracy-style measures","title":"Accuracy vs. melodic similarity","text":"context melodic recall, broadly speaking, accuracy can defined number correct notes relative something else. something else ) number unique notes target stimulus ii) attempt length. Let us call note contained target melody sung recall “hit”, note recalled target stimulus, “false alarm” note target melody sung recall, “miss”. Table 1: Confusion matrix note--note comparison target melody sung recall. Accuracy can defined : \\[\\begin{equation} Accuracy = \\frac{NoHits}{NoHits + NoFalseAlarms + NoMisses} \\tag{1} \\end{equation}\\] Another measure related accuracy precision, defined : \\[\\begin{equation} Precision = \\frac{NoHits}{NoHits + NoMiss} \\tag{2} \\end{equation}\\] means denominator number notes stimulus , hence, proportion notes target stimulus recalled. Lastly, recall defined : \\[\\begin{equation} Recall = \\frac{NoHits}{NoHits + NoFalseAlarms} \\tag{3} \\end{equation}\\] denominator represents number notes sung recall. Precision recall can combined together score known F1 score, harmonic mean precision recall, simplifying : \\[\\begin{equation} F_1 = \\frac{2 * NoHits}{2 * NoHits + NoMisses + NoFalseAlarms} \\tag{4} \\end{equation}\\] F1 score well precision recall used extensively computational contexts music information retrieval contexts [@pearceMelodicGroupingMusic2010]. One issue melodic recall research length recall can substantially different target melody length, terms number notes. One way dealing , context accuracy, normalise based length stimuli: \\[\\begin{equation} AccuracyAdjusted = Accuracy * LogNormal(\\frac{NoNotesInSungRecall}{NoNotesInStimuli}) \\quad \\[0,1] \\tag{5} \\end{equation}\\] Accuracy computed via Eq. 1 LogNormal represents log normal transformation function map accuracy value closed unit interval range. profile measures accuracy, Accuracy, Recall, Precision, AccuracyAdjusted F1, Experiment 1.","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/accuracy_vs_similarity_measures.html","id":"example-comparisons-of-accuracy-vs--similarity-measures-on-the-same-data","dir":"Articles","previous_headings":"","what":"2. Example comparisons of accuracy vs. similarity measures on the same data","title":"Accuracy vs. melodic similarity","text":"now score simple examples demonstrate difference accuracy similarity (see Table 1 Figure 1). Let us take first five notes C major scale target. target recall , measures accuracy similarity 1. However, Example 1 shows, pitch order reversed, accuracy measures 1, overall measure similarity (opti3), nearly half . corresponds fact notes , order highly distorts melodic identity (note harmonic rhythmic identity preserved, however). Conversely, Example #2 shows, transposing recall semitone causes large deterioration accuracy scores, since nearly notes different, similarity measure 1, corresponding fact melodic identity preserved principle transposition invariance. Examples 3-6, take humourous example “Lick” - archetypal jazz pattern made famous YouTube1 transform familiar melodic transformations retrograde, inversion retrograde inversion. Example #3 shows retrograde preserves accuracy destroys identity similarity. Examples #4 #5 show inversion retrograde inversion somewhat preserves accuracy destroys identity similarity. Finally, consider pitch value changes, rhythmic changes, destroys rhythmic identity lowers overall melodic similarity (opti3), preserves accuracy.","code":""},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/articles/accuracy_vs_similarity_measures.html","id":"similarity-scores-for-the-example-comparison-melodies","dir":"Articles","previous_headings":"2. Example comparisons of accuracy vs. similarity measures on the same data","what":"2.2 Similarity scores for the example comparison melodies","title":"Accuracy vs. melodic similarity","text":"Table 2: Similarity scores example comparison melodies. examples intuitively demonstrate accuracy similarity measures diverge specifically, similarity metrics embody notions perceptual similarity across relevant musical dimensions, opposed note--note accuracy measures, necessarily embody anything musical consideration. words: accuracy measures may score target recall highly, despite musical differences large, opposite, musically similar target recall badly! observations new. Perceptual experiments demonstrated familiar transformations retrograde, inversion retrograde inversion destroy melodic identity [e.g., @dowlingRecognitionMelodicTransformations1972]. However, aware distinction made clearly within melodic recall research. profile difference quantitatively, now run series short simulation studies.","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/accuracy_vs_similarity_measures.html","id":"code-used-above","dir":"Articles","previous_headings":"","what":"3. Code used above","title":"Accuracy vs. melodic similarity","text":"","code":"library(dplyr) library(knitr) library(gm)  # Note you will need MuseScore installed on your system for gm to work. sim_vs_acc <- function(target, recall,                         target_rhythms = rep(0.5, length(target)),                         recall_rhythms = rep(0.5, length(recall)),                        example_no,                        example_description) {      h <- musicassessr::score_melodic_production(     user_melody_input = recall,     user_duration_input = recall_rhythms,     user_onset_input = c(0, cumsum(recall_rhythms)[1:(length(recall_rhythms)-1)]),     stimuli = target,     stimuli_durations = target_rhythms,   )         tibble::tibble(     `Example No.` = example_no,     `Example Desc.` = example_description,     `Acc.` = h$accuracy,     Prec. = h$precision,     Recall = h$recall,     F1 = h$F1_score,     PMI = h$PMI,     AccAdj= h$proportion_of_correct_note_events_controlled_by_stimuli_length_log_normal,     opti3 = h$opti3,     ngrukkon = h$ngrukkon,     rhythfuzz = h$rhythfuzz,     harmcore = h$harmcore   ) %>% dplyr::mutate(dplyr::across(`Acc.`:harmcore, round, 2)) }   create_sheet <- function(target_v,                           recall_v,                           target_rhythms_v = rep(\"quarter\", length(target_v)),                          recall_rhythms_v = rep(\"quarter\", length(recall_v)),                          key = NULL,                          target_title = \"Target\",                          recall_title = \"Recall\",                          export = TRUE,                          just_return_name = FALSE) {   l <- Line(   pitches = as.list(target_v),   durations = as.list(target_rhythms_v),   name = target_title   )      l2 <- Line(   pitches = as.list(recall_v),   durations = as.list(recall_rhythms_v),   name = recall_title   )         if(!is.null(key)) {     m <- Music() + Meter(4, 4)+ Key(key) + l + l2   } else {     m <- Music() + Meter(4, 4) + l + l2   }      if(export) {     fn <- paste0(target_title, \"_\", recall_title)     if(!just_return_name) gm::export(m, getwd(), fn, \"png\")     return(paste0(fn, \".png\"))   } else {     gm::show(m)    } }  invert_melody <- function(m) {   start_note <- m[1]   intervals <- diff(m)   inverted_intervals <- intervals * -1   itembankr::rel_to_abs_mel(inverted_intervals, start_note) } # Example #1: Reversed Recall  ex1_t <- c(60, 62, 64, 65, 67) ex1_r <- ex1_t[length(ex1_t):1]  ex1_rhythms <- c(0.25, 0.25, 0.25, 0.25, 0.5) ex1_rhythms_text <- c(\"quarter\",\"quarter\", \"quarter\", \"quarter\", \"half\")   # Example #2: Transposed Recall ex2_t <- ex1_t ex2_r <- ex1_t + 1   # The Lick  the_lick <- c(67, 69, 70, 72, 69, 65, 67) the_lick_rhythms <- c(0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 1) the_lick_rhythms_text <- c(\"eighth\",\"eighth\", \"eighth\", \"eighth\", \"quarter\", \"quarter\", \"half\")    # Example #3: The Lick plus its retrograde (rhythms the same  the_lick_retrograde <- the_lick[length(the_lick):1]   # Example #4: The Lick plus its inversion (rhythms the same)  the_lick_inverted <- invert_melody(the_lick)  # \"Example #5: The Lick plus its retrograde inversion (rhythms the same)  the_lick_retrograde_inversion <- the_lick_inverted[length(the_lick_inverted):1]   # Example #6: The Lick plus its rhythm values changed.  the_lick_rhythms_diff <- c(0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.5) the_lick_rhythms_text_diff <- c(\"quarter\",\"quarter\", \"quarter\", \"quarter\", \"eighth\", \"eighth\", \"quarter\") s1 <- create_sheet(ex1_t, ex1_r, ex1_rhythms_text, ex1_rhythms_text,                    target_title = \"Ex.1 Target\", recall_title = \"Ex.1 Recall\")  s2 <- create_sheet(ex2_t, ex2_r, ex1_rhythms_text, ex1_rhythms_text,                    target_title = \"Ex.2 Target\", recall_title = \"Ex.2 Recall\")  s3 <- create_sheet(the_lick, the_lick_retrograde, the_lick_rhythms_text, the_lick_rhythms_text, key = -1,                     target_title = \"Ex.3 Target\", recall_title = \"Ex.3 Recall\")  s4 <- create_sheet(the_lick, the_lick_inverted, the_lick_rhythms_text, the_lick_rhythms_text, key = -1,                     target_title = \"Ex.4 Target\", recall_title = \"Ex.4 Recall\")  s5 <- create_sheet(the_lick, the_lick_retrograde_inversion, the_lick_rhythms_text, the_lick_rhythms_text, key = -1,                     target_title = \"Ex.5 Target\", recall_title = \"Ex.5 Recall\")  s6 <- create_sheet(the_lick, the_lick, the_lick_rhythms_text, the_lick_rhythms_text_diff, key = -1,                    target_title = \"Ex.6 Target\", recall_title = \"Ex.6 Recall\") main_tb <- rbind(   sim_vs_acc(target = ex1_t, recall = ex1_r, example_no = 1, example_description = \"Reversed Recall\",               target_rhythms = ex1_rhythms, recall_rhythms = ex1_rhythms),   sim_vs_acc(target = ex2_t, recall = ex2_r, example_no = 2, example_description = \"Transposed Recall\",               target_rhythms = ex1_rhythms, recall_rhythms = ex1_rhythms),   sim_vs_acc(   target =  the_lick,   target_rhythms = the_lick_rhythms,   recall = the_lick_retrograde,   recall_rhythms = the_lick_rhythms,   example_no = 3,   example_description = \"The Lick vs. its retrograde (rhythms the same)\"),      sim_vs_acc(     target =  the_lick,     target_rhythms = the_lick_rhythms,     recall = the_lick_inverted,     recall_rhythms = the_lick_rhythms,     example_no = 4,     example_description = \"The Lick plus its inversion (rhythms the same)\"),      sim_vs_acc(     target =  the_lick,     target_rhythms = the_lick_rhythms,     recall = the_lick_retrograde_inversion,     recall_rhythms = the_lick_rhythms,     example_no = 5,     example_description = \"The Lick plus its retrograde inversion (rhythms the same)\"   ),         sim_vs_acc(     target =  the_lick,     target_rhythms = the_lick_rhythms,     recall = the_lick,     recall_rhythms = the_lick_rhythms_diff,     example_no = 6,     example_description = \"The Lick plus its rhythm values changed.\"   )   )    main_tb %>%    knitr::kable(caption = \"Examples of two comparison melodies scored for their level of similarity.\")"},{"path":"https://sebsilas.github.io/musicassessr/articles/profile_basic_accuracy_measures.html","id":"standard-accuracy-measure-results","dir":"Articles","previous_headings":"","what":"1.1 Standard accuracy measure results","title":"Profiling of basic accuracy measures","text":"shown Figure 1: 1A) adding jitter duration values causes rhythfuzz degrade well harmcore (offsets alignment harmonic progressions), consequently, opti3. accuracy measures unaffected. 1B) note insertions cause measures degrade, except accuracy precision, stay constant. Similarity measures generally degrade prominently accuracy-style measures, particularly ngrukkon; 1C) note deletions cause measures degrade, except accuracy recall, stay constant. Similarity measures generally degrade quickly accuacy-style measures, particularly ngrukkon; 1D) note deletions cause measures degrade, except rhythfuzz, whichs stay constant. similarity measures (ngrukkon, harmcore, opti3) degrade prominently accuracy-style measures, particularly ngrukkon. 1E) combined pitch transformations (insertions, deletions substitutions) cause measures degrade, similarity measures prominently accuracy-style measures; 1F) combined pitch transformations (insertions, deletions substitutions) rhythmic jitter cause measures degrade, similarity measures prominently accuracy-style measures; 1G) length recall increases towards length target melody, measures increase, except recall accuracy, always 1; 1H) Scrambling order pitches affects accuracy measures rhythfuzz. similarity measures deteriorate function scrambling. Figure 1: Simulation experiment results non-aligned accuracy measures.","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/profile_basic_accuracy_measures.html","id":"standard-accuracy-measure-results-with-alignment","dir":"Articles","previous_headings":"","what":"1.2 Standard accuracy measure results with alignment","title":"Profiling of basic accuracy measures","text":"shown Figure 1: 1A) adding jitter duration values causes rhythfuzz degrade well harmcore (offsets alignment harmonic progressions), consequently, opti3. accuracy measures unaffected. 1B) note insertions cause measures degrade, except accuracy precision, stay constant. Similarity measures generally degrade prominently accuracy-style measures, particularly ngrukkon; 1C) note deletions cause measures degrade, except accuracy recall, stay constant. Similarity measures generally degrade quickly accuacy-style measures, particularly ngrukkon; 1D) note deletions cause measures degrade, except rhythfuzz, whichs stay constant. similarity measures (ngrukkon, harmcore, opti3) degrade prominently accuracy-style measures, particularly ngrukkon. 1E) combined pitch transformations (insertions, deletions substitutions) cause measures degrade, similarity measures prominently accuracy-style measures; 1F) combined pitch transformations (insertions, deletions substitutions) rhythmic jitter cause measures degrade, similarity measures prominently accuracy-style measures; 1G) length recall increases towards length target melody, measures increase, except recall accuracy, always 1; 1H) Scrambling order pitches affects accuracy measures rhythfuzz. similarity measures deteriorate function scrambling. Figure 2: Simulation experiment results aligned accuracy measures.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"melodic-feature-summary-statistics","dir":"Articles","previous_headings":"2. An example of one melody from each pop song.","what":"2.3 Melodic feature summary statistics","title":"Silas & Müllensiefen (2023) online supplement","text":"Melodic feature summary statistics. Note, used modelling, show properties melodies.","code":""},{"path":[]},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"average-by-participant-across-trials","dir":"Articles","previous_headings":"","what":"4.0 Average by-participant across trials","title":"Silas & Müllensiefen (2023) online supplement","text":"Another way visualising differences performance level participant, coloured ordered level musical experience. useful since invokes false dichotimisations preserves actual unit participant (however, note participant-level effects captured mixed effects models).","code":""},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"average-by-participant-development-of-opti3-across-trials","dir":"Articles","previous_headings":"","what":"4.2 Average by-participant development of opti3 across trials","title":"Silas & Müllensiefen (2023) online supplement","text":"shown figure, participants seem vastly different slopes. bottom right, lighter blue, higher musical experience participants (e.g., VP5, VP7, VP30, VP12, VP17, VP24, VP2) seem steeper slopes lower musical experience participants top left, darker coloured (VP14, VP28, VP21), suggesting higher musical experience related quicker learning. However, note pattern everyone e.g., VP22 steep slope, scores low musical experience","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"average-by-melody-development-of-attempt-across-trials","dir":"Articles","previous_headings":"","what":"5.1 Average by-melody development of attempt across trials","title":"Silas & Müllensiefen (2023) online supplement","text":"Melody SA_B appears easiest melody recall (mean opti3 across trials = 0.61), whereas MF_B appears difficult recall (mean opti3 across trials = 0.11). shows can substantial variation difficulty melody.","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"linear-vs--non-linear-models-attempt-length-and-opti3","dir":"Articles","previous_headings":"","what":"6.0 Linear vs. Non-Linear Models attempt length and opti3","title":"Silas & Müllensiefen (2023) online supplement","text":"proceed using log attempt numeric predictor, owing observed non-linearities opti3 attempt length across attempt. comparison linear vs non-linear models shown .","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"linear-model-of-attempt-length-across-repeated-attempts","dir":"Articles","previous_headings":"6.0 Linear vs. Non-Linear Models attempt length and opti3","what":"6.1: Linear model of attempt length across repeated attempts","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:tablei) linear model attempt length regressed onto attempt melody item, participant interaction melody item participant random effects. Note linear model taken forward. Figure 6 shows use log attempt predictor justified, capturing systematic non-linear pattern generally well.","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"appendix-6-2-linear-model-of-mean-similarity-scores-opti3-across-repeated-attempts","dir":"Articles","previous_headings":"6.0 Linear vs. Non-Linear Models attempt length and opti3","what":"Appendix 6.2: Linear model of mean similarity scores (opti3) across repeated attempts","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-30)","code":""},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"with-attempt-length-as-dependent-variable","dir":"Articles","previous_headings":"7.0 Diagnostic statistics for models with all features in (partial R-squared and variance inflation factor values)","what":"7.1 With attempt length as dependent variable","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-33) Variation inflation factor (VIF) values model features attempt length dependent variable (#tab:unnamed-chunk-34) Partial R-Squared values model features attempt length dependent variable","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"with-opti3-as-dependent-variable","dir":"Articles","previous_headings":"7.0 Diagnostic statistics for models with all features in (partial R-squared and variance inflation factor values)","what":"7.2 With opti3 as dependent variable","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-36) Variation inflation factor (VIF) values model features opti3 dependent variable (#tab:unnamed-chunk-37) Partial R-Squared values model features opti3 dependent variable","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"counts-of-overall-number-of-trials-that-participants-utilise-for-multiple-attempts","dir":"Articles","previous_headings":"","what":"8.0 Counts of overall number of trials that participants utilise for multiple attempts","title":"Silas & Müllensiefen (2023) online supplement","text":"assess whether change across attempts depended musical experience, fitted mixed effects model trial count dependent variable, participant random effect following fixed effects: linear terms attempt musical experience; additional quadratic term attempt; linear interaction term attempt musical experience; quadratic interaction interaction term musical experience. model presented . (#tab:unnamed-chunk-39)","code":""},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"opti3","dir":"Articles","previous_headings":"9.0 Statistical models to support changes in similarity as a function of attempt and melody section","what":"9.1 opti3","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-40)","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"ngrukkon","dir":"Articles","previous_headings":"9.0 Statistical models to support changes in similarity as a function of attempt and melody section","what":"9.2 ngrukkon","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-41)","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"rhythfuzz","dir":"Articles","previous_headings":"9.0 Statistical models to support changes in similarity as a function of attempt and melody section","what":"9.3 rhythfuzz","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-42)","code":""},{"path":"https://sebsilas.github.io/musicassessr/articles/silas_and_mullensiefen_2023_online_supplement.html","id":"harmcore","dir":"Articles","previous_headings":"9.0 Statistical models to support changes in similarity as a function of attempt and melody section","what":"9.4 harmcore","title":"Silas & Müllensiefen (2023) online supplement","text":"(#tab:unnamed-chunk-43)","code":""},{"path":"https://sebsilas.github.io/musicassessr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Silas. Author, maintainer.","code":""},{"path":"https://sebsilas.github.io/musicassessr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silas S (2023). musicassessr: musicassessr; develop music psychology tests assess musicological/psychological data. R package version 1.1.0, https://sebsilas.github.io/musicassessr/.","code":"@Manual{,   title = {musicassessr: musicassessr; develop music psychology tests and assess musicological/psychological data},   author = {Sebastian Silas},   year = {2023},   note = {R package version 1.1.0},   url = {https://sebsilas.github.io/musicassessr/}, }"},{"path":"https://sebsilas.github.io/musicassessr/index.html","id":"musicassessr","dir":"","previous_headings":"","what":"musicassessr; develop music psychology tests and assess musicological/psychological data","title":"musicassessr; develop music psychology tests and assess musicological/psychological data","text":"musicassessr R package facilitating deployment (particularly, musical) stimuli psychological tests well recording scoring data. provides convenience functions deploy stimuli via psychTestR, advanced psychTestR page types collect new types data, utilities process score data, among things.","code":""},{"path":"https://sebsilas.github.io/musicassessr/index.html","id":"the-musicassessr-ecosystem","dir":"","previous_headings":"","what":"The musicassessr ecosystem","title":"musicassessr; develop music psychology tests and assess musicological/psychological data","text":"musicassessr part network packages. See also: pyin: transcribe monophonic audio R environment using pYIN algorithm itembankr: produce musicassessr-compatible item banks useful melodic features Berkowitz: pre-made itembankr item bank Baker (2021) / Berkowitz (2017) sight-singing corpus. WJD: pre-made itembankr item bank Weimar Jazz Database.","code":""},{"path":"https://sebsilas.github.io/musicassessr/index.html","id":"musical-ability-tests","dir":"","previous_headings":"The musicassessr ecosystem","what":"Musical ability tests","title":"musicassessr; develop music psychology tests and assess musicological/psychological data","text":"musicassessr currently facilitates following music ability tests: SAA (singing ability assessment) PBET (playing ear test) PDT (pitch discrimination test)","code":""},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"musicassessr; develop music psychology tests and assess musicological/psychological data","text":"Baker, D. (2021). MeloSol Corpus. Empirical Musicology Review, 16, 106–113. https://doi.org/10.18061/emr.v16i1.7645 Beaty, R. E., Frieler, K., Norgaard, M., Merseal, H. M., MacDonald, M. C., & Weiss, D. J. (2021). Expert musical improvisations contain sequencing biases seen language production. Journal Experimental Psychology. https://doi.org/10.1037/xge0001107 Berkowitz, S., Fontrier, G., Goldstein, P., & Smaldone, E. (2017). new approach sight singing (Sixth edition). W. W. Norton & Company. Cannam, C., Jewell, M. O., Rhodes, C., Sandler, M., & d’Inverno, M. (2010). Linked Data : Bringing music research software Semantic Web. Journal New Music Research, 39(4), 313–325. Crayencour, H.-C., Velichkina, O., Frieler, K., Höger, F., Pfleiderer, M., Henry, L., Solis, G., Wolff, D., Weyde, T., Peeters, G., Basaran, D., Smith, J., & Proutskova, P. (2021). DTL1000 Jazz Solo Dataset (prep.). Journal Computing Cultural Heritage Harrison, P. M. C. (2020). psychTestR: R package designing conducting behavioural psychological experiments. Journal Open Source Software, 5(49), 2088. https://doi.org/10.21105/joss.02088 Mauch, M., & Dixon, S. (2014). PYIN: fundamental frequency estimator using probabilistic threshold distributions. Proceedings IEEE International Conference Acoustics, Speech, Signal Processing (ICASSP 2014). Müllensiefen, D., & Frieler, K. (2007). Modelling experts’ notions melodic similarity. Musicae Scientiae, 11(1_suppl), 183–210. https://doi.org/10.1177/102986490701100108 Silas, S., & Frieler, K. (2023). musicassessr ecosystem: Record, measure, score present feedback musical production behaviour real-time, supported psychometric models. Deutsche Gesellschaft für Musikpsychologie, Hanover. Silas, S., Müllensiefen, D., & Kopiez, R. (2023). Singing Ability Assessment: Development validation singing test based item response theory general open-source software environment singing data. Behaviour Research Methods. Silas, S., Müllensiefen, D., & Kopiez, R. (2023). Utilising new generation musical production tests understand musical learning: Singing ability assessment, melodic recall playing ear. Deutsche Gesellschaft für Musikpsychologie, Hanover. Silas, S., Kopiez, R., & Müllensiefen, D. (2021). makes playing ear difficult? SEMPRE conference.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/adaptive_arrhythmic_melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive arrhythmic melody trials block — adaptive_arrhythmic_melody_trials","title":"Adaptive arrhythmic melody trials block — adaptive_arrhythmic_melody_trials","text":"Adaptive arrhythmic melody trials block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/adaptive_arrhythmic_melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive arrhythmic melody trials block — adaptive_arrhythmic_melody_trials","text":"","code":"adaptive_arrhythmic_melody_trials(   label,   num_items,   item_bank,   model,   fixed_effects,   demo = FALSE,   page_type = \"record_audio_page\",   page_title = \"Sing back the melody\",   page_text = \"Sing back the melody\",   get_answer = musicassessr::get_answer_pyin_melodic_production,   give_first_melody_note = FALSE,   play_melody_loop = FALSE,   answer_column = \"melody\",   feedback = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/adaptive_arrhythmic_melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive arrhythmic melody trials block — adaptive_arrhythmic_melody_trials","text":"feedback","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/add_feedback.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for adding a feedback function to a timeline of pages — add_feedback","title":"Helper for adding a feedback function to a timeline of pages — add_feedback","text":"Helper adding feedback function timeline pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/add_feedback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for adding a feedback function to a timeline of pages — add_feedback","text":"","code":"add_feedback(items, feedback, after = 2)"},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/reference/add_feedback_with_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for adding a feedback function to a timeline of pages with a progress bar — add_feedback_with_progress","title":"Helper for adding a feedback function to a timeline of pages with a progress bar — add_feedback_with_progress","text":"Helper adding feedback function timeline pages progress bar","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/add_feedback_with_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for adding a feedback function to a timeline of pages with a progress bar — add_feedback_with_progress","text":"","code":"add_feedback_with_progress(items, feedback, after = 2)"},{"path":[]},{"path":"https://sebsilas.github.io/musicassessr/reference/arrhythmic_melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrhythmic melody trials block — arrhythmic_melody_trials","title":"Arrhythmic melody trials block — arrhythmic_melody_trials","text":"Arrhythmic melody trials block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/arrhythmic_melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrhythmic melody trials block — arrhythmic_melody_trials","text":"","code":"arrhythmic_melody_trials(   var_name = \"arrhythmic_melody\",   module_name = \"arrhythmic_melodies\",   page_text = \"Press play to hear the melody. Play back the melody.\",   page_title = \"Play this melody.\",   instruction_text =     \"Now you will hear some melodies. Please try and play back the melodies.\",   sampler_function = sample_arrhythmic,   item_bank,   num_items = integer(),   num_examples = 0L,   feedback = FALSE,   get_answer = get_answer_pyin_melodic_production_additional_measures,   sound = \"piano\",   page_type = \"record_audio_page\",   get_trial_characteristics_function = NULL,   item_characteristics_sampler_function = NULL,   item_characteristics_pars = NULL,   rel_to_abs_mel_function = rel_to_abs_mel_mean_centred,   max_goes = 3L,   max_goes_forced = FALSE,   display_modality = \"auditory\",   show_progress = TRUE,   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   give_first_melody_note = FALSE,   presampled = FALSE,   get_similarity_to_previous_melody = FALSE,   volume_meter = FALSE,   volume_meter_type = \"default\",   melody_block_paradigm = c(\"standard\", \"sing_melody_first\",     \"learn_phase_visual_display_modality\"),   singing_trials = TRUE,   review = FALSE,   phase = c(\"test\", \"learn\", \"review\"),   first_note_message = \"The first note is: \",   transposed_message = \"Please note, this is transposed for your instrument.\",   play_first_note_button_text = \"Play First Note\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/arrhythmic_melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrhythmic melody trials block — arrhythmic_melody_trials","text":"play_first_note_button_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/audio_melodic_production_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Present a trial block of melodies from audio files — audio_melodic_production_trials","title":"Present a trial block of melodies from audio files — audio_melodic_production_trials","text":"Present trial block melodies audio files","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/audio_melodic_production_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present a trial block of melodies from audio files — audio_melodic_production_trials","text":"","code":"audio_melodic_production_trials(   audio_directory,   no_to_sample = NULL,   module_prefix = \"audio_trial\",   page_title = psychTestR::i18n(\"Sing_the_Melody\"),   page_text = psychTestR::i18n(\"sing_melody_page_text\"),   grab_meta_data,   meta_data_df,   meta_data_lookup_column,   get_answer = get_answer_pyin_melodic_production_additional_measures,   feedback = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/audio_melodic_production_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present a trial block of melodies from audio files — audio_melodic_production_trials","text":"feedback","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/calculate_stable_part.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate metrics related to ","title":"Calculate metrics related to ","text":"Calculate metrics related \"changepoints\" time series (e.g., long note trials) Input: df \"freq\" column","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/calculate_stable_part.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate metrics related to ","text":"","code":"calculate_stable_part(df, plot = FALSE, return_df = FALSE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/calculate_stable_part.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate metrics related to ","text":"return_df","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/connect_to_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a postgres DB — connect_to_db","title":"Connect to a postgres DB — connect_to_db","text":"Connect postgres DB","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/connect_to_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a postgres DB — connect_to_db","text":"","code":"connect_to_db(   host = Sys.getenv(\"DB_HOST\"),   db_name = Sys.getenv(\"DB_NAME\"),   username = Sys.getenv(\"DB_USER\"),   password = Sys.getenv(\"DB_PASSWORD\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/connect_to_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a postgres DB — connect_to_db","text":"password","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/create_socials.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interface to share test score on socials — create_socials","title":"Create an interface to share test score on socials — create_socials","text":"Create interface share test score socials","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/create_socials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interface to share test score on socials — create_socials","text":"","code":"create_socials(socials, test_name, score, hashtag, test, url)"},{"path":"https://sebsilas.github.io/musicassessr/reference/create_socials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interface to share test score on socials — create_socials","text":"url","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/db_append_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a data frame to a table in the database — db_append_to_table","title":"Append a data frame to a table in the database — db_append_to_table","text":"Append data frame table database","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/db_append_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a data frame to a table in the database — db_append_to_table","text":"","code":"db_append_to_table(db_con, table, data, primary_key_col = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/db_append_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a data frame to a table in the database — db_append_to_table","text":"db_con database connection environment table Name table append database data dataframe appended","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/db_append_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a data frame to a table in the database — db_append_to_table","text":"Returns number rows affected","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/default_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default range for an instrument — default_range","title":"Get the default range for an instrument — default_range","text":"Get default range instrument","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/default_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default range for an instrument — default_range","text":"","code":"default_range(instrument)"},{"path":"https://sebsilas.github.io/musicassessr/reference/default_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the default range for an instrument — default_range","text":"instrument","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/deploy_demographics.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy Demographics via psyquest — deploy_demographics","title":"Deploy Demographics via psyquest — deploy_demographics","text":"Deploy Demographics via psyquest","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/deploy_demographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy Demographics via psyquest — deploy_demographics","text":"","code":"deploy_demographics(deploy)"},{"path":"https://sebsilas.github.io/musicassessr/reference/deploy_demographics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy Demographics via psyquest — deploy_demographics","text":"deploy","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/dict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use musicassessr standard dictionary plus concatenate with your own — dict","title":"Use musicassessr standard dictionary plus concatenate with your own — dict","text":"Use musicassessr standard dictionary plus concatenate ","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/dict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use musicassessr standard dictionary plus concatenate with your own — dict","text":"","code":"dict(additional_dict = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/dict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use musicassessr standard dictionary plus concatenate with your own — dict","text":"additional_dict","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/download_files_from_ec2.html","id":null,"dir":"Reference","previous_headings":"","what":"Download files from the ec2 instance (in batches) — download_files_from_ec2","title":"Download files from the ec2 instance (in batches) — download_files_from_ec2","text":"Download files ec2 instance (batches)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/download_files_from_ec2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download files from the ec2 instance (in batches) — download_files_from_ec2","text":"","code":"download_files_from_ec2(   file_name,   absolute_url,   download_location,   batch_size = 100 )"},{"path":"https://sebsilas.github.io/musicassessr/reference/download_files_from_ec2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download files from the ec2 instance (in batches) — download_files_from_ec2","text":"batch_size","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/elt_add_final_session_info_to_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Add final session info to postgres db — elt_add_final_session_info_to_db","title":"Add final session info to postgres db — elt_add_final_session_info_to_db","text":"Add final session info postgres db","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/elt_add_final_session_info_to_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add final session info to postgres db — elt_add_final_session_info_to_db","text":"","code":"elt_add_final_session_info_to_db()"},{"path":"https://sebsilas.github.io/musicassessr/reference/empty_code_block.html","id":null,"dir":"Reference","previous_headings":"","what":"An empty code block — empty_code_block","title":"An empty code block — empty_code_block","text":"empty code block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/empty_code_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An empty code block — empty_code_block","text":"","code":"empty_code_block()"},{"path":"https://sebsilas.github.io/musicassessr/reference/empty_page.html","id":null,"dir":"Reference","previous_headings":"","what":"An empty page (with trigger button hidden and possible to show on demand.) — empty_page","title":"An empty page (with trigger button hidden and possible to show on demand.) — empty_page","text":"empty page (trigger button hidden possible show demand.)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/empty_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An empty page (with trigger button hidden and possible to show on demand.) — empty_page","text":"","code":"empty_page(   body = \"\",   admin_ui = NULL,   button_text = psychTestR::i18n(\"Next\"),   on_complete = NULL,   page_title = \"\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/empty_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An empty page (with trigger button hidden and possible to show on demand.) — empty_page","text":"page_title","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/end_of_long_note_trial_screening.html","id":null,"dir":"Reference","previous_headings":"","what":"End of long note trial screening code block — end_of_long_note_trial_screening","title":"End of long note trial screening code block — end_of_long_note_trial_screening","text":"End long note trial screening code block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/end_of_long_note_trial_screening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End of long note trial screening code block — end_of_long_note_trial_screening","text":"","code":"end_of_long_note_trial_screening(failure_page = \"http://www.google.com\")"},{"path":"https://sebsilas.github.io/musicassessr/reference/expand_string_df_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand a string dataframe row to a dataframe — expand_string_df_row","title":"Expand a string dataframe row to a dataframe — expand_string_df_row","text":"Expand string dataframe row dataframe","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/expand_string_df_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand a string dataframe row to a dataframe — expand_string_df_row","text":"","code":"expand_string_df_row(df, row_id = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/expand_string_df_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand a string dataframe row to a dataframe — expand_string_df_row","text":"row_id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Feedback as an image — feedback_image","title":"Feedback as an image — feedback_image","text":"Feedback image","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feedback as an image — feedback_image","text":"","code":"feedback_image(   image,   height = NULL,   width = NULL,   text = \"Well done!\",   progress = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feedback as an image — feedback_image","text":"progress","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_melodic_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Feedback for melodic production pages — feedback_melodic_production","title":"Feedback for melodic production pages — feedback_melodic_production","text":"Feedback melodic production pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_melodic_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feedback for melodic production pages — feedback_melodic_production","text":"","code":"feedback_melodic_production(melody_dtw = TRUE, answer_meta_data = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_melodic_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feedback for melodic production pages — feedback_melodic_production","text":"answer_meta_data","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_melodic_production_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple melodic production feedback — feedback_melodic_production_simple","title":"Simple melodic production feedback — feedback_melodic_production_simple","text":"Simple melodic production feedback","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_melodic_production_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple melodic production feedback — feedback_melodic_production_simple","text":"","code":"feedback_melodic_production_simple()"},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_rhythm_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Feedback for rhythm production style pages — feedback_rhythm_production","title":"Feedback for rhythm production style pages — feedback_rhythm_production","text":"Feedback rhythm production style pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/feedback_rhythm_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feedback for rhythm production style pages — feedback_rhythm_production","text":"","code":"feedback_rhythm_production()"},{"path":"https://sebsilas.github.io/musicassessr/reference/filler_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a filler task — filler_task","title":"Deploy a filler task — filler_task","text":"Deploy filler task","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/filler_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a filler task — filler_task","text":"","code":"filler_task(type = c(\"none\", \"surveys\"))"},{"path":"https://sebsilas.github.io/musicassessr/reference/filler_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a filler task — filler_task","text":"type","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/final_page_or_continue_to_new_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Should the end of the test present a final page or not? — final_page_or_continue_to_new_test","title":"Should the end of the test present a final page or not? — final_page_or_continue_to_new_test","text":"end test present final page ?","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/final_page_or_continue_to_new_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Should the end of the test present a final page or not? — final_page_or_continue_to_new_test","text":"","code":"final_page_or_continue_to_new_test(final = TRUE, task_name, img = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/final_page_or_continue_to_new_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Should the end of the test present a final page or not? — final_page_or_continue_to_new_test","text":"img","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/find_closest_stimuli_pitch_to_user_production_pitches.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the closest pitch(s) in a stimulus, to the notes a user produced — find_closest_stimuli_pitch_to_user_production_pitches","title":"Find the closest pitch(s) in a stimulus, to the notes a user produced — find_closest_stimuli_pitch_to_user_production_pitches","text":"Find closest pitch(s) stimulus, notes user produced","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/find_closest_stimuli_pitch_to_user_production_pitches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the closest pitch(s) in a stimulus, to the notes a user produced — find_closest_stimuli_pitch_to_user_production_pitches","text":"","code":"find_closest_stimuli_pitch_to_user_production_pitches(   stimuli_pitches,   user_production_pitches,   allOctaves = TRUE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/find_closest_stimuli_pitch_to_user_production_pitches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the closest pitch(s) in a stimulus, to the notes a user produced — find_closest_stimuli_pitch_to_user_production_pitches","text":"allOctaves","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/find_this_note_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Present ","title":"Present ","text":"Present \"Find Note\" trials","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/find_this_note_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present ","text":"","code":"find_this_note_trials(   num_items,   num_examples = 0L,   feedback = FALSE,   page_title = \"Find This Note\",   get_answer = get_answer_pyin_melodic_production,   page_type = \"record_audio_page\",   page_text =     \"Press play to hear the note. Try and play it on your instrument when you can.\",   trial_paradigm = c(\"simultaneous_recall\", \"call_and_response\"),   call_and_response_end = c(\"manual\", \"auto\"),   singing_trials = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/find_this_note_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present ","text":"page_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_SNR_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SNR pages — get_SNR_pages","title":"Get SNR pages — get_SNR_pages","text":"Get SNR pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_SNR_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SNR pages — get_SNR_pages","text":"","code":"get_SNR_pages(   min_SNR = 14,   absolute_url = character(),   report_SNR = FALSE,   allow_SNR_failure = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_SNR_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SNR pages — get_SNR_pages","text":"allow_SNR_failure","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_SNR_pages_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SNR pages as a loop (i.e., the participant can take multiple attempts) — get_SNR_pages_loop","title":"Get SNR pages as a loop (i.e., the participant can take multiple attempts) — get_SNR_pages_loop","text":"Get SNR pages loop (.e., participant can take multiple attempts)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_SNR_pages_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SNR pages as a loop (i.e., the participant can take multiple attempts) — get_SNR_pages_loop","text":"","code":"get_SNR_pages_loop(   min_SNR = 14,   absolute_url = character(),   report_SNR,   allow_SNR_failure = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_SNR_pages_loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SNR pages as a loop (i.e., the participant can take multiple attempts) — get_SNR_pages_loop","text":"allow_SNR_failure","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_midi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get answer for a MIDI page — get_answer_midi","title":"Get answer for a MIDI page — get_answer_midi","text":"Get answer MIDI page","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_midi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get answer for a MIDI page — get_answer_midi","text":"","code":"get_answer_midi(input, state, ...)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_midi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get answer for a MIDI page — get_answer_midi","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_midi_melodic_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a MIDI result and compute melodic production scores — get_answer_midi_melodic_production","title":"Get a MIDI result and compute melodic production scores — get_answer_midi_melodic_production","text":"Get MIDI result compute melodic production scores","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_midi_melodic_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a MIDI result and compute melodic production scores — get_answer_midi_melodic_production","text":"","code":"get_answer_midi_melodic_production(input, state, ...)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_midi_melodic_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a MIDI result and compute melodic production scores — get_answer_midi_melodic_production","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_onset_detection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get onset information from an audio file — get_answer_onset_detection","title":"Get onset information from an audio file — get_answer_onset_detection","text":"Get onset information audio file","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_onset_detection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get onset information from an audio file — get_answer_onset_detection","text":"","code":"get_answer_onset_detection(   input,   state,   add_silence_to_beginning_of_audio_file = 0.5,   add_silence_to_end_of_audio_file = 0,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_onset_detection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get onset information from an audio file — get_answer_onset_detection","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get answer by running pyin on a recorded audio file — get_answer_pyin","title":"Get answer by running pyin on a recorded audio file — get_answer_pyin","text":"Get answer running pyin recorded audio file","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get answer by running pyin on a recorded audio file — get_answer_pyin","text":"","code":"get_answer_pyin(   input,   type = c(\"both\", \"notes\", \"pitch_track\"),   state,   melconv = FALSE,   add_silence_to_beginning_of_audio_file = 0.5,   add_silence_to_end_of_audio_file = 0,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get answer by running pyin on a recorded audio file — get_answer_pyin","text":"add_silence_to_beginning_of_audio_file seconds. add_silence_to_end_of_audio_file seconds. ...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_long_note.html","id":null,"dir":"Reference","previous_headings":"","what":"get_answer pyin for long notes — get_answer_pyin_long_note","title":"get_answer pyin for long notes — get_answer_pyin_long_note","text":"get_answer pyin long notes","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_long_note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_answer pyin for long notes — get_answer_pyin_long_note","text":"","code":"get_answer_pyin_long_note(input, state, ...)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_long_note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_answer pyin for long notes — get_answer_pyin_long_note","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_melodic_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyse a melody with pyin then compute melodic production scores — get_answer_pyin_melodic_production","title":"Analyse a melody with pyin then compute melodic production scores — get_answer_pyin_melodic_production","text":"Analyse melody pyin compute melodic production scores","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_melodic_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyse a melody with pyin then compute melodic production scores — get_answer_pyin_melodic_production","text":"","code":"get_answer_pyin_melodic_production(   input,   type = c(\"both\", \"notes\", \"pitch_track\"),   state,   melconv = FALSE,   additional_scoring_measures = NULL,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_melodic_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyse a melody with pyin then compute melodic production scores — get_answer_pyin_melodic_production","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_melodic_production_additional_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to add user-specified additional scoring measures to pYIN melodic production — get_answer_pyin_melodic_production_additional_measures","title":"Wrapper to add user-specified additional scoring measures to pYIN melodic production — get_answer_pyin_melodic_production_additional_measures","text":"Wrapper add user-specified additional scoring measures pYIN melodic production","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_melodic_production_additional_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to add user-specified additional scoring measures to pYIN melodic production — get_answer_pyin_melodic_production_additional_measures","text":"","code":"get_answer_pyin_melodic_production_additional_measures(   type = c(\"both\", \"notes\", \"pitch_track\"),   melconv = FALSE,   additional_scoring_measures = NULL,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_pyin_melodic_production_additional_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to add user-specified additional scoring measures to pYIN melodic production — get_answer_pyin_melodic_production_additional_measures","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_rhythm_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Get answer for rhythm production data — get_answer_rhythm_production","title":"Get answer for rhythm production data — get_answer_rhythm_production","text":"Get answer rhythm production data","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_rhythm_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get answer for rhythm production data — get_answer_rhythm_production","text":"","code":"get_answer_rhythm_production(   input,   state,   type = c(\"midi\", \"audio\", \"key_presses\"),   feedback = TRUE,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_rhythm_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get answer for rhythm production data — get_answer_rhythm_production","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_save_audio_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple saving of the corresponding URL of a trial file — get_answer_save_audio_file","title":"Simple saving of the corresponding URL of a trial file — get_answer_save_audio_file","text":"Simple saving corresponding URL trial file","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_save_audio_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple saving of the corresponding URL of a trial file — get_answer_save_audio_file","text":"","code":"get_answer_save_audio_file(input, ...)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_save_audio_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple saving of the corresponding URL of a trial file — get_answer_save_audio_file","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_simple_pyin_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"summarise pyin output with basic statistics — get_answer_simple_pyin_summary","title":"summarise pyin output with basic statistics — get_answer_simple_pyin_summary","text":"summarise pyin output basic statistics","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_simple_pyin_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarise pyin output with basic statistics — get_answer_simple_pyin_summary","text":"","code":"get_answer_simple_pyin_summary(input, state, ...)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_answer_simple_pyin_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarise pyin output with basic statistics — get_answer_simple_pyin_summary","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_implicit_harmonies.html","id":null,"dir":"Reference","previous_headings":"","what":"get harmonies via the Krumhansl-Schmuckler algorithm — get_implicit_harmonies","title":"get harmonies via the Krumhansl-Schmuckler algorithm — get_implicit_harmonies","text":"get harmonies via Krumhansl-Schmuckler algorithm","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_implicit_harmonies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get harmonies via the Krumhansl-Schmuckler algorithm — get_implicit_harmonies","text":"","code":"get_implicit_harmonies(pitch_vec, segmentation = NULL, only_winner = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_implicit_harmonies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get harmonies via the Krumhansl-Schmuckler algorithm — get_implicit_harmonies","text":"only_winner","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_instrument_range_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Instrument Range Pages — get_instrument_range_pages","title":"Get Instrument Range Pages — get_instrument_range_pages","text":"Get Instrument Range Pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_instrument_range_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Instrument Range Pages — get_instrument_range_pages","text":"","code":"get_instrument_range_pages(   input_type,   show_musical_notation = FALSE,   adjust_range = FALSE,   test_type = c(\"voice\", \"instrument\"),   concise_wording = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_instrument_range_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Instrument Range Pages — get_instrument_range_pages","text":"concise_wording","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_long_note_pcas.html","id":null,"dir":"Reference","previous_headings":"","what":"Get long note PCA scores — get_long_note_pcas","title":"Get long note PCA scores — get_long_note_pcas","text":"Get long note PCA scores","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_long_note_pcas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get long note PCA scores — get_long_note_pcas","text":"","code":"get_long_note_pcas(long_note_scores)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_long_note_pcas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get long note PCA scores — get_long_note_pcas","text":"long_note_beginning_of_second_cpt","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_melody_dtw.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the dynamic time warp distance between a melodic stimuli and a user's continuous pitch curve, attempting to sing that stimuli — get_melody_dtw","title":"Compute the dynamic time warp distance between a melodic stimuli and a user's continuous pitch curve, attempting to sing that stimuli — get_melody_dtw","text":"Compute dynamic time warp distance melodic stimuli user's continuous pitch curve, attempting sing stimuli","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_melody_dtw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the dynamic time warp distance between a melodic stimuli and a user's continuous pitch curve, attempting to sing that stimuli — get_melody_dtw","text":"","code":"get_melody_dtw(stimuli, stimuli_durations, pyin_pitch_track, pyin_res)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_melody_dtw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the dynamic time warp distance between a melodic stimuli and a user's continuous pitch curve, attempting to sing that stimuli — get_melody_dtw","text":"pyin_res","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_range_from_user_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a user's range based on their user ID — get_range_from_user_id","title":"Get a user's range based on their user ID — get_range_from_user_id","text":"Get user's range based user ID","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_range_from_user_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a user's range based on their user ID — get_range_from_user_id","text":"","code":"get_range_from_user_id(db_con, user_id, instrument_id = 1L)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_range_from_user_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a user's range based on their user ID — get_range_from_user_id","text":"user_id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_review_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a random selection of previous trials based on a user ID — get_review_trials","title":"Get a random selection of previous trials based on a user ID — get_review_trials","text":"Note currently distinguish recent session others back, trial type previously (arrhythmic, rhythmic etc.)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_review_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a random selection of previous trials based on a user ID — get_review_trials","text":"","code":"get_review_trials(no_reviews, state)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_review_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a random selection of previous trials based on a user ID — get_review_trials","text":"no_reviews","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a postgres table — get_table","title":"Get a postgres table — get_table","text":"Get postgres table","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a postgres table — get_table","text":"","code":"get_table(db_con, name, collect = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a postgres table — get_table","text":"collect","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_user_info_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a user has the requirements to run our test and record their browser information — get_user_info_page","title":"Check a user has the requirements to run our test and record their browser information — get_user_info_page","text":"Check user requirements run test record browser information","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_user_info_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a user has the requirements to run our test and record their browser information — get_user_info_page","text":"","code":"get_user_info_page(chrome_only = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_user_info_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a user has the requirements to run our test and record their browser information — get_user_info_page","text":"chrome_only","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_voice_range_page.html","id":null,"dir":"Reference","previous_headings":"","what":"A page to select a voice range — get_voice_range_page","title":"A page to select a voice range — get_voice_range_page","text":"page select voice range","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/get_voice_range_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A page to select a voice range — get_voice_range_page","text":"","code":"get_voice_range_page(with_examples = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/get_voice_range_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A page to select a voice range — get_voice_range_page","text":"with_examples","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/grab_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab meta data from a df — grab_meta_data","title":"Grab meta data from a df — grab_meta_data","text":"Grab meta data df","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/grab_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab meta data from a df — grab_meta_data","text":"","code":"grab_meta_data(meta_data_df, lookup_column, value)"},{"path":"https://sebsilas.github.io/musicassessr/reference/grab_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab meta data from a df — grab_meta_data","text":"value","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/harmcore.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute harmcore — harmcore","title":"Compute harmcore — harmcore","text":"Compute harmcore","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/harmcore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute harmcore — harmcore","text":"","code":"harmcore(   pitch_vec1,   pitch_vec2,   segmentation1 = NULL,   segmentation2 = NULL,   segmentation_type = c(\"phrase_boundary_marker\", \"segment_id\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/harmcore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute harmcore — harmcore","text":"segmentation_type","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/have_requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if user has requirements for musicassessr test — have_requirements","title":"Check if user has requirements for musicassessr test — have_requirements","text":"Check user requirements musicassessr test","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/have_requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if user has requirements for musicassessr test — have_requirements","text":"","code":"have_requirements(answer, ...)"},{"path":"https://sebsilas.github.io/musicassessr/reference/have_requirements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if user has requirements for musicassessr test — have_requirements","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/include_musicassessr_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Include musicassessr scripts in a webpage — include_musicassessr_js","title":"Include musicassessr scripts in a webpage — include_musicassessr_js","text":"Include musicassessr scripts webpage","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/include_musicassessr_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include musicassessr scripts in a webpage — include_musicassessr_js","text":"","code":"include_musicassessr_js(   app_name = \"\",   visual_notation = FALSE,   record_audio = TRUE,   midi_input = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/include_musicassessr_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include musicassessr scripts in a webpage — include_musicassessr_js","text":"midi_input","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/insert_item_into_every_other_n_position_in_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert item into every other n position in list — insert_item_into_every_other_n_position_in_list","title":"Insert item into every other n position in list — insert_item_into_every_other_n_position_in_list","text":"Insert item every n position list","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/insert_item_into_every_other_n_position_in_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert item into every other n position in list — insert_item_into_every_other_n_position_in_list","text":"","code":"insert_item_into_every_other_n_position_in_list(l, item_to_add, n = 2)"},{"path":"https://sebsilas.github.io/musicassessr/reference/insert_item_into_every_other_n_position_in_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert item into every other n position in list — insert_item_into_every_other_n_position_in_list","text":"n","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/interval_perception_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"A block which test a participant's perception of intervals — interval_perception_trials","title":"A block which test a participant's perception of intervals — interval_perception_trials","text":"block test participant's perception intervals","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/interval_perception_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A block which test a participant's perception of intervals — interval_perception_trials","text":"","code":"interval_perception_trials(   num_items = 26L,   sound = \"piano\",   page_title = \"What's that interval?\",   instruction_text =     \"In the next set of trials, you will hear a musical interval. You must try and say what the interval is. There are no practice rounds, you will begin immediately.\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/interval_perception_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A block which test a participant's perception of intervals — interval_perception_trials","text":"instruction_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/is_null_or_not_all_TRUE.html","id":null,"dir":"Reference","previous_headings":"","what":"Is NULL or not all TRUE? — is_null_or_not_all_TRUE","title":"Is NULL or not all TRUE? — is_null_or_not_all_TRUE","text":"NULL TRUE?","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/is_null_or_not_all_TRUE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is NULL or not all TRUE? — is_null_or_not_all_TRUE","text":"","code":"is_null_or_not_all_TRUE(x)"},{"path":"https://sebsilas.github.io/musicassessr/reference/is_null_or_not_all_TRUE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is NULL or not all TRUE? — is_null_or_not_all_TRUE","text":"x","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/item_sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Item sampler — item_sampler","title":"Item sampler — item_sampler","text":"Item sampler","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/item_sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item sampler — item_sampler","text":"","code":"item_sampler(item_bank, no_items, replace = FALSE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/item_sampler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item sampler — item_sampler","text":"replace","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/list_official_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"List official musicassessr tests — list_official_tests","title":"List official musicassessr tests — list_official_tests","text":"List official musicassessr tests","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/list_official_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List official musicassessr tests — list_official_tests","text":"","code":"list_official_tests(include_PDT = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/list_official_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List official musicassessr tests — list_official_tests","text":"include_PDT","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/list_tone_sound_types.html","id":null,"dir":"Reference","previous_headings":"","what":"List tone sound types — list_tone_sound_types","title":"List tone sound types — list_tone_sound_types","text":"List tone sound types","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/list_tone_sound_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tone sound types — list_tone_sound_types","text":"","code":"list_tone_sound_types()"},{"path":"https://sebsilas.github.io/musicassessr/reference/long_note_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregated long note data from SAA paper — long_note_agg","title":"Aggregated long note data from SAA paper — long_note_agg","text":"Aggregated long note data SAA paper","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/long_note_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregated long note data from SAA paper — long_note_agg","text":"","code":"long_note_agg"},{"path":"https://sebsilas.github.io/musicassessr/reference/long_note_agg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregated long note data from SAA paper — long_note_agg","text":"Dataframe.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/long_note_pitch_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute long tone pitch metrics — long_note_pitch_metrics","title":"Compute long tone pitch metrics — long_note_pitch_metrics","text":"Compute long tone pitch metrics","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/long_note_pitch_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute long tone pitch metrics — long_note_pitch_metrics","text":"","code":"long_note_pitch_metrics(target_pitch, freq)"},{"path":"https://sebsilas.github.io/musicassessr/reference/long_note_pitch_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute long tone pitch metrics — long_note_pitch_metrics","text":"target_pitch MIDI pitch. freq pyin frequency vector.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/long_tone_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Present a block of long tone trials — long_tone_trials","title":"Present a block of long tone trials — long_tone_trials","text":"Present block long tone trials","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/long_tone_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present a block of long tone trials — long_tone_trials","text":"","code":"long_tone_trials(   num_items,   num_examples = 0L,   feedback = FALSE,   show_instructions = TRUE,   page_text = psychTestR::i18n(\"long_tone_text\"),   page_title = psychTestR::i18n(\"long_tone_title\"),   get_answer = get_answer_pyin_long_note,   page_type = \"record_audio_page\",   long_tone_trials_as_screening = FALSE,   long_tone_trials_as_screening_failure_page = \"http://www.google.com\",   instruction_text = shiny::div(shiny::tags$h2(page_title),     shiny::tags$p(psychTestR::i18n(\"long_tone_instruction\")),     shiny::tags$p(psychTestR::i18n(\"long_tone_instruction_2\")),     shiny::tags$p(psychTestR::i18n(\"long_tone_instruction_3\"))),   module_name = \"long_tone_trials\",   show_progress = TRUE,   paradigm = c(\"simultaneous_recall\", \"call_and_response\"),   long_tone_length = 5 )"},{"path":"https://sebsilas.github.io/musicassessr/reference/long_tone_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present a block of long tone trials — long_tone_trials","text":"long_tone_length","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/make_musicassessr_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a musicassessr test — make_musicassessr_test","title":"Make a musicassessr test — make_musicassessr_test","text":"Make musicassessr test","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/make_musicassessr_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a musicassessr test — make_musicassessr_test","text":"","code":"make_musicassessr_test(   title,   admin_password,   elts,   elts_before_setup_pages = function() {      empty_code_block()  },   languages = \"en\",   opt = musicassessr_opt(),   final_page_ui = psychTestR::i18n(\"thank_you_for_completing\"),   welcome_page = psychTestR::one_button_page(\"Welcome.\"),   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/make_musicassessr_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a musicassessr test — make_musicassessr_test","text":"title Title test. admin_password Password test. elts Timeline go setup pages. elts_before_setup_pages Timeline go setup pages. languages Languages test. opt Musicassessr options. final_page_ui UI final page. welcome_page Required need page musicassessr_init instantiate p_id. ...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/melconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Melconv — melconv","title":"Melconv — melconv","text":"Melconv","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/melconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melconv — melconv","text":"","code":"melconv(file_name, return_notes_and_durs = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/melconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melconv — melconv","text":"return_notes_and_durs","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/melconv_from_pyin_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Melconv from a pyin result — melconv_from_pyin_res","title":"Melconv from a pyin result — melconv_from_pyin_res","text":"Melconv pyin result","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/melconv_from_pyin_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melconv from a pyin result — melconv_from_pyin_res","text":"","code":"melconv_from_pyin_res(pyin_res)"},{"path":"https://sebsilas.github.io/musicassessr/reference/melconv_from_pyin_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melconv from a pyin result — melconv_from_pyin_res","text":"pyin_res","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Melody trials constructor — melody_trials","title":"Melody trials constructor — melody_trials","text":"Melody trials constructor","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melody trials constructor — melody_trials","text":"","code":"melody_trials(   var_name,   module_name,   page_text,   page_title,   instruction_text,   sampler_function,   item_bank,   num_items = integer(),   num_examples = 0L,   feedback = FALSE,   get_answer = get_answer_pyin_melodic_production_additional_measures,   sound = \"piano\",   page_type = \"record_audio_page\",   get_trial_characteristics_function = NULL,   item_characteristics_sampler_function = NULL,   item_characteristics_pars = NULL,   rel_to_abs_mel_function = rel_to_abs_mel_mean_centred,   max_goes = 3L,   max_goes_forced = FALSE,   display_modality = \"auditory\",   show_progress = TRUE,   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   give_first_melody_note = FALSE,   presampled = FALSE,   arrhythmic = FALSE,   get_similarity_to_previous_melody = FALSE,   volume_meter = FALSE,   volume_meter_type = \"default\",   melody_block_paradigm = c(\"standard\", \"sing_melody_first\",     \"learn_phase_visual_display_modality\"),   singing_trials = TRUE,   review = FALSE,   phase = c(\"test\", \"learn\", \"review\"),   first_note_message = psychTestR::i18n(\"first_note_is\"),   transposed_message = psychTestR::i18n(\"transposed\"),   play_first_note_button_text = psychTestR::i18n(\"play_first_note\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melody trials constructor — melody_trials","text":"play_first_note_button_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/microphone_calibration_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Microphone Calibration Page — microphone_calibration_page","title":"Microphone Calibration Page — microphone_calibration_page","text":"Microphone Calibration Page","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/microphone_calibration_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Microphone Calibration Page — microphone_calibration_page","text":"","code":"microphone_calibration_page(   button_text = psychTestR::i18n(\"Start_test\"),   concise_wording = FALSE,   musical_instrument = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/microphone_calibration_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Microphone Calibration Page — microphone_calibration_page","text":"musical_instrument","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/microphone_type_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Microphone Type Page — microphone_type_page","title":"Microphone Type Page — microphone_type_page","text":"Microphone Type Page","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/microphone_type_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Microphone Type Page — microphone_type_page","text":"","code":"microphone_type_page()"},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_interval_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a block of n trials which play back intervals — multi_interval_page","title":"Deploy a block of n trials which play back intervals — multi_interval_page","text":"Deploy block n trials play back intervals","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_interval_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a block of n trials which play back intervals — multi_interval_page","text":"","code":"multi_interval_page(num_items = 26L, page_title = \"What is the interval?\")"},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_interval_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a block of n trials which play back intervals — multi_interval_page","text":"page_title","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_page_play_melody_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"A page builder for creating a specified number of play_melody_loops — multi_page_play_melody_loop","title":"A page builder for creating a specified number of play_melody_loops — multi_page_play_melody_loop","text":"page builder creating specified number play_melody_loops","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_page_play_melody_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A page builder for creating a specified number of play_melody_loops — multi_page_play_melody_loop","text":"","code":"multi_page_play_melody_loop(   item_bank = NULL,   presampled_items = NULL,   num_items = NULL,   var_name = \"melody\",   stimuli_type = \"midi_notes\",   page_type = \"record_audio_page\",   max_goes = 4L,   page_title = psychTestR::i18n(\"copy_melody_title\"),   page_text =     \"Press play to hear the melody, then play it back as best as you can when it finishes.\",   get_answer = get_answer_pyin_melodic_production,   rel_to_abs_mel_function = NULL,   start_from_trial_no = 1L,   clip_stimuli_length = FALSE,   arrhythmic = FALSE,   example = FALSE,   feedback = FALSE,   sound = \"piano\",   get_trial_characteristics_function = NULL,   max_goes_forced = FALSE,   display_modality = \"auditory\",   show_progress = TRUE,   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   give_first_melody_note = FALSE,   get_similarity_to_previous_melody = FALSE,   volume_meter = FALSE,   volume_meter_type = \"default\",   melody_block_paradigm = c(\"standard\", \"sing_melody_first\",     \"learn_phase_visual_display_modality\"),   singing_trials = TRUE,   phase = c(\"test\", \"learn\", \"review\", \"example\"),   melody_trial_paradigm = c(\"call_and_response\", \"simultaneous_recall\"),   first_note_message = psychTestR::i18n(\"first_note_is\"),   transposed_message = psychTestR::i18n(\"transposed\"),   play_first_note_button_text = psychTestR::i18n(\"play_first_note\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_page_play_melody_loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A page builder for creating a specified number of play_melody_loops — multi_page_play_melody_loop","text":"play_first_note_button_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_play_long_tone_record_audio_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Build multiple play_long_tone_record_audio_pages based on a user's range — multi_play_long_tone_record_audio_pages","title":"Build multiple play_long_tone_record_audio_pages based on a user's range — multi_play_long_tone_record_audio_pages","text":"Build multiple play_long_tone_record_audio_pages based user's range","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_play_long_tone_record_audio_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build multiple play_long_tone_record_audio_pages based on a user's range — multi_play_long_tone_record_audio_pages","text":"","code":"multi_play_long_tone_record_audio_pages(   no_items,   page_type = \"record_audio_page\",   page_text = psychTestR::i18n(\"long_tone_text\"),   example = FALSE,   page_title = psychTestR::i18n(\"long_tone_title\"),   feedback = FALSE,   get_answer = get_answer_pyin_long_note,   show_progress = TRUE,   trial_paradigm = c(\"simultaneous_recall\", \"call_and_response\"),   call_and_response_end = c(\"manual\", \"auto\"),   long_tone_length = 5,   singing_trial = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/multi_play_long_tone_record_audio_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build multiple play_long_tone_record_audio_pages based on a user's range — multi_play_long_tone_record_audio_pages","text":"singing_trial","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musical_test_showcase.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the musical test showcase of musicassessr tests — musical_test_showcase","title":"Launch the musical test showcase of musicassessr tests — musical_test_showcase","text":"Launch musical test showcase musicassessr tests","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musical_test_showcase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the musical test showcase of musicassessr tests — musical_test_showcase","text":"","code":"musical_test_showcase(   app_name = \"test_showcase\",   musicassessr_aws = FALSE,   feedback = TRUE,   num_items_rtt = list(free_recall = 2L, sync_beat = 2L, call_and_response = 2L),   num_items_saa = list(long_tones = 2L, arrhythmic = 2L, rhythmic = 2L),   num_items_pbet = list(find_this_note = 0L, arrhythmic = list(key_hard = 1L, key_easy =     1L), rhythmic = list(key_hard = 1L, key_easy = 1L), interval_perception = 0L,     wjd_audio = list(key_easy = 0L, key_hard = 0L)),   showcase_name = \"musicassessr\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/musical_test_showcase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the musical test showcase of musicassessr tests — musical_test_showcase","text":"showcase_name","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_dict.html","id":null,"dir":"Reference","previous_headings":"","what":"The musicassessr dictionary — musicassessr_dict","title":"The musicassessr dictionary — musicassessr_dict","text":"musicassessr dictionary","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_dict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The musicassessr dictionary — musicassessr_dict","text":"","code":"musicassessr_dict"},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_dict.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The musicassessr dictionary — musicassessr_dict","text":"psychTestR::i18n_dict","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate a musicassessr test — musicassessr_init","title":"Initiate a musicassessr test — musicassessr_init","text":"Initiate musicassessr test","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate a musicassessr test — musicassessr_init","text":"","code":"musicassessr_init(   use_musicassessr_db = FALSE,   app_name = \"\",   experiment_id = NULL,   experiment_condition_id = NULL,   user_id = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate a musicassessr test — musicassessr_init","text":"user_id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_js.html","id":null,"dir":"Reference","previous_headings":"","what":"musicassessr scripts — musicassessr_js","title":"musicassessr scripts — musicassessr_js","text":"musicassessr scripts","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"musicassessr scripts — musicassessr_js","text":"","code":"musicassessr_js(   app_name,   musicassessr_aws = FALSE,   visual_notation = FALSE,   midi_file_playback = FALSE,   record_audio = TRUE,   midi_input = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"musicassessr scripts — musicassessr_js","text":"midi_input","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_opt.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify options for a musicassessr test. — musicassessr_opt","title":"Specify options for a musicassessr test. — musicassessr_opt","text":"Specify options musicassessr test.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify options for a musicassessr test. — musicassessr_opt","text":"","code":"musicassessr_opt(   setup_pages = TRUE,   setup_options = setup_pages_options(),   use_musicassessr_db = FALSE,   app_name = \"\",   midi_file_playback = FALSE,   visual_notation = FALSE,   record_audio = TRUE,   midi_input = FALSE,   fake_range = TRUE,   musicassessr_aws = FALSE,   experiment_id = NULL,   experiment_condition_id = NULL,   user_id = NULL,   instrument_id = NULL,   get_p_id = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/musicassessr_opt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify options for a musicassessr test. — musicassessr_opt","text":"setup_pages setup pages? setup_options Setup page options. use_musicassessr_db SQL backend used? app_name App name audio recording apps. midi_file_playback MIDI files need played back? visual_notation visual notation? record_audio audio recording required? midi_input MIDI input required? fake_range vocal/instrument range faked? musicassessr_aws run Amazon Web Services (AWS)? experiment_id experiment ID. experiment_condition_id experiment condition ID. user_id user ID. instrument_id instrument ID. get_p_id participant ID get collected beginning test?","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/ngrukkon.html","id":null,"dir":"Reference","previous_headings":"","what":"ngrukkon as in  Müllensiefen & Frieler (2004) — ngrukkon","title":"ngrukkon as in  Müllensiefen & Frieler (2004) — ngrukkon","text":"ngrukkon  Müllensiefen & Frieler (2004)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/ngrukkon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ngrukkon as in  Müllensiefen & Frieler (2004) — ngrukkon","text":"","code":"ngrukkon(x, y, N = 3)"},{"path":"https://sebsilas.github.io/musicassessr/reference/ngrukkon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ngrukkon as in  Müllensiefen & Frieler (2004) — ngrukkon","text":"N","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/ngrukkon_safe.html","id":null,"dir":"Reference","previous_headings":"","what":"An ngrukkon wrapper to produce warnings and return NAs rather than stop if one entry is too short — ngrukkon_safe","title":"An ngrukkon wrapper to produce warnings and return NAs rather than stop if one entry is too short — ngrukkon_safe","text":"ngrukkon wrapper produce warnings return NAs rather stop one entry short","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/ngrukkon_safe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An ngrukkon wrapper to produce warnings and return NAs rather than stop if one entry is too short — ngrukkon_safe","text":"","code":"ngrukkon_safe(x, y, N = 3)"},{"path":"https://sebsilas.github.io/musicassessr/reference/ngrukkon_safe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An ngrukkon wrapper to produce warnings and return NAs rather than stop if one entry is too short — ngrukkon_safe","text":"N","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/opti3.html","id":null,"dir":"Reference","previous_headings":"","what":"Score using the opti3 measure of similarity — opti3","title":"Score using the opti3 measure of similarity — opti3","text":"Score using opti3 measure similarity","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/opti3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score using the opti3 measure of similarity — opti3","text":"","code":"opti3(   pitch_vec1,   onset_vec1,   pitch_vec2,   onset_vec2,   N = 3,   use_bootstrap = TRUE,   return_components = FALSE,   segmentation1 = NULL,   segmentation2 = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/opti3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score using the opti3 measure of similarity — opti3","text":"segmentation2","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/opti3_df.html","id":null,"dir":"Reference","previous_headings":"","what":"opti3 for melodies read by read_melody\nreturns sorted tibble of transpositions of melody2 and opti3 similarity — opti3_df","title":"opti3 for melodies read by read_melody\nreturns sorted tibble of transpositions of melody2 and opti3 similarity — opti3_df","text":"opti3 melodies read read_melody returns sorted tibble transpositions melody2 opti3 similarity","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/opti3_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"opti3 for melodies read by read_melody\nreturns sorted tibble of transpositions of melody2 and opti3 similarity — opti3_df","text":"","code":"opti3_df(melody1, melody2, N = 3, use_bootstrap = FALSE, return_winner = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/opti3_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"opti3 for melodies read by read_melody\nreturns sorted tibble of transpositions of melody2 and opti3 similarity — opti3_df","text":"return_winner","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/paradigm.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose a melody paradigm — paradigm","title":"Choose a melody paradigm — paradigm","text":"Choose melody paradigm","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/paradigm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose a melody paradigm — paradigm","text":"","code":"paradigm(   paradigm_type = c(\"call_and_response\", \"simultaneous_recall\"),   page_type = c(\"record_audio_page\", \"record_midi_page\"),   call_and_response_end = c(\"manual\", \"auto\"),   stop_recording_after_x_seconds = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/paradigm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose a melody paradigm — paradigm","text":"stop_recording_after_x_seconds","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://sebsilas.github.io/musicassessr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/play_long_tone_record_audio_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a page which produces a given tone — play_long_tone_record_audio_page","title":"Create a page which produces a given tone — play_long_tone_record_audio_page","text":"Create page produces given tone","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/play_long_tone_record_audio_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a page which produces a given tone — play_long_tone_record_audio_page","text":"","code":"play_long_tone_record_audio_page(   note = NULL,   long_note_no = 0,   long_tone_length = 5,   page_title = psychTestR::i18n(\"long_tone_title\"),   page_text = psychTestR::i18n(\"long_tone_text\"),   play_button_text = psychTestR::i18n(\"Play\"),   page_type = \"record_audio_page\",   example = FALSE,   get_answer = get_answer_pyin_long_note,   page_label = \"long_tone\",   total_no_long_notes = 0,   show_progress = FALSE,   trial_paradigm = c(\"simultaneous_recall\", \"call_and_response\"),   call_and_response_end = c(\"manual\", \"auto\"),   singing_trial = TRUE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/play_long_tone_record_audio_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a page which produces a given tone — play_long_tone_record_audio_page","text":"singing_trial","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/play_melody_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a psychTestR test loop for having several attempts at playing back a melody. — play_melody_loop","title":"Create a psychTestR test loop for having several attempts at playing back a melody. — play_melody_loop","text":"Create psychTestR test loop several attempts playing back melody.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/play_melody_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a psychTestR test loop for having several attempts at playing back a melody. — play_melody_loop","text":"","code":"play_melody_loop(   item_bank = NULL,   melody = NULL,   melody_no = 0,   var_name = \"melody\",   stimuli_type = \"midi_notes\",   max_goes = 4L,   max_goes_forced = FALSE,   page_type = \"record_audio_page\",   page_title = \"Copy The Melody\",   page_text =     \"Press play to hear the melody, then play it back as best as you can when it finishes.\",   answer_meta_data = data.frame(),   get_answer = get_answer_pyin_melodic_production,   rel_to_abs_mel_function = NULL,   clip_stimuli_length = FALSE,   start_note = 1L,   end_note = \"end\",   durations = \"null\",   arrhythmic = FALSE,   note_length = 0.5,   play_button_text = psychTestR::i18n(\"Play\"),   example = FALSE,   sound = \"piano\",   reactive_stimuli = NULL,   get_trial_characteristics_function = NULL,   display_modality = \"auditory\",   total_no_melodies = 0,   show_progress = TRUE,   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   give_first_melody_note = FALSE,   psychTestRCAT = FALSE,   melody_row = NULL,   get_similarity_to_previous_melody = FALSE,   volume_meter = FALSE,   volume_meter_type = \"default\",   singing_trial = TRUE,   phase = c(\"test\", \"learn\", \"review\", \"example\"),   melody_block_paradigm = c(\"standard\", \"sing_melody_first\",     \"learn_phase_visual_display_modality\"),   melody_trial_paradigm = c(\"call_and_response\", \"simultaneous_recall\"),   first_note_message = psychTestR::i18n(\"first_note_is\"),   transposed_message = psychTestR::i18n(\"transposed\"),   play_first_note_button_text = psychTestR::i18n(\"play_first_note\"),   skip_sampling_and_take_from_last_melody = FALSE,   reactive_melody_no = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/play_melody_loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a psychTestR test loop for having several attempts at playing back a melody. — play_melody_loop","text":"singing_trial Boolean: TRUE, trial defined singing-based, otherwise instrument-based. phase Can one 'learn', 'test', 'review' 'example' reactive_melody_no","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_dtw_melody.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a melody after being transformed into a representation for use with the dynamic time warp algorithm — plot_dtw_melody","title":"Plot a melody after being transformed into a representation for use with the dynamic time warp algorithm — plot_dtw_melody","text":"Plot melody transformed representation use dynamic time warp algorithm","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_dtw_melody.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a melody after being transformed into a representation for use with the dynamic time warp algorithm — plot_dtw_melody","text":"","code":"plot_dtw_melody(stimuli, stimuli_durations, pyin_smoothed_pitchtrack)"},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_dtw_melody.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a melody after being transformed into a representation for use with the dynamic time warp algorithm — plot_dtw_melody","text":"pyin_smoothed_pitchtrack","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_longitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot longitudinal — plot_longitudinal","title":"Plot longitudinal — plot_longitudinal","text":"Plot longitudinal","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_longitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot longitudinal — plot_longitudinal","text":"","code":"plot_longitudinal(   type = c(\"ability_across_sessions\", \"mean_opti3_across_sessions\",     \"melody_by_session_average\", \"melody_by_attempt_and_sessions\",     \"average_melody_opti3_across_sessions_for_repeated_melodies\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_longitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot longitudinal — plot_longitudinal","text":"type","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_normal_dist_plus_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a normal distribution with a certain score highlighted — plot_normal_dist_plus_score","title":"Plot a normal distribution with a certain score highlighted — plot_normal_dist_plus_score","text":"Plot normal distribution certain score highlighted","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_normal_dist_plus_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a normal distribution with a certain score highlighted — plot_normal_dist_plus_score","text":"","code":"plot_normal_dist_plus_score(   data = NULL,   mean = NULL,   sd = NULL,   highlighted_score,   title = ggplot2::waiver(),   colour = \"purple\",   plot_point = FALSE,   alpha = 0.1,   vertical_line_colour = \"orange\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/plot_normal_dist_plus_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a normal distribution with a certain score highlighted — plot_normal_dist_plus_score","text":"vertical_line_colour","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/pmi.html","id":null,"dir":"Reference","previous_headings":"","what":"PMI similarity measure — pmi","title":"PMI similarity measure — pmi","text":"PMI similarity measure","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/pmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PMI similarity measure — pmi","text":"","code":"pmi(stimuli_pitch, sung_recall_pitch)"},{"path":"https://sebsilas.github.io/musicassessr/reference/pmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PMI similarity measure — pmi","text":"sung_recall_pitch","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/prepare_mel_stimuli_for_dtw.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a melody to a pseudo-timeseries representation — prepare_mel_stimuli_for_dtw","title":"Convert a melody to a pseudo-timeseries representation — prepare_mel_stimuli_for_dtw","text":"Convert melody pseudo-timeseries representation","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/prepare_mel_stimuli_for_dtw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a melody to a pseudo-timeseries representation — prepare_mel_stimuli_for_dtw","text":"","code":"prepare_mel_stimuli_for_dtw(melody, durations, convert_midi_to_freq = TRUE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/prepare_mel_stimuli_for_dtw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a melody to a pseudo-timeseries representation — prepare_mel_stimuli_for_dtw","text":"convert_midi_to_freq","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli.html","id":null,"dir":"Reference","previous_headings":"","what":"Present stimuli — present_stimuli","title":"Present stimuli — present_stimuli","text":"Present stimuli","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present stimuli — present_stimuli","text":"","code":"present_stimuli(   stimuli,   stimuli_type,   display_modality,   page_type = character(),   page_text = \" \",   page_title = \" \",   slide_length = numeric(),   answer_meta_data = character(),   get_answer = function(input, ...) {          stop(\"Specify a proper get_answer function if you're using present_stimuli with page_type\")      },   save_answer = TRUE,   stimuli_reactive = FALSE,   midi_device = \" \",   page_label = \"x\",   button_text = psychTestR::i18n(\"Next\"),   play_button_text = psychTestR::i18n(\"Play\"),   note_length = 0.5,   sound = \"piano\",   asChord = FALSE,   ascending = TRUE,   start_note = 0L,   end_note = \"end\",   durations = numeric(),   choices = character(),   user_rating = FALSE,   page_text_first = TRUE,   happy_with_response = FALSE,   attempts_left = 1L,   visual_music_notation_id = \"sheet_music\",   play_button_id = \"playButton\",   button_area_id = \"button_area\",   hideOnPlay = FALSE,   record_immediately = FALSE,   max_goes_forced = FALSE,   transpose_visual_notation = 0L,   clef = \"auto\",   volume = 1,   audio_playback_as_single_play_button = FALSE,   max_goes = 1L,   melody_no = 0L,   total_no_melodies = 0L,   show_progress = FALSE,   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   give_first_melody_note = FALSE,   slider_value = 5,   slider_min = 1,   slider_max = 10,   octave = 4,   volume_meter = FALSE,   volume_meter_type = \"default\",   show_sheet_music_after_record = FALSE,   interactive = FALSE,   show_record_button = FALSE,   trigger_start_of_stimulus_fun = wrap_js_fun_body(\"console.log('Stimulus started!');\"),   trigger_end_of_stimulus_fun = wrap_js_fun_body(\"console.log('Stimulus finished!');\"),   first_note_message = psychTestR::i18n(\"first_note_is\"),   transposed_message = psychTestR::i18n(\"transposed\"),   play_first_note_button_text = psychTestR::i18n(\"play_first_note\"),   reactive_melody_no = FALSE,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present stimuli — present_stimuli","text":"trigger_start_of_stimulus_fun string anonymous Javascript function (body) trigger stimulus begins. trigger_end_of_stimulus_fun string anonymous Javascript function (body) trigger stimulus completed. ...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli_midi_notes_both.html","id":null,"dir":"Reference","previous_headings":"","what":"Present midi notes in both visual and auditory modalities — present_stimuli_midi_notes_both","title":"Present midi notes in both visual and auditory modalities — present_stimuli_midi_notes_both","text":"Present midi notes visual auditory modalities","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli_midi_notes_both.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present midi notes in both visual and auditory modalities — present_stimuli_midi_notes_both","text":"","code":"present_stimuli_midi_notes_both(   stimuli,   note_length = 0.5,   sound = \"piano\",   asChord = FALSE,   play_button_text = \"Play\",   ascending = TRUE,   visual_music_notation_id = \"sheet_music\",   play_button_id = \"playButton\",   button_area_id = \"button_area\",   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   page_type = \"null\",   durations = NULL,   trigger_start_of_stimulus_fun = wrap_js_fun_body(\"console.log('Stimulus started!');\"),   trigger_end_of_stimulus_fun = wrap_js_fun_body(\"console.log('Stimulus finished!');\"),   clef = \"auto\",   first_note_message = psychTestR::i18n(\"first_note_is\"),   transposed_message = psychTestR::i18n(\"transposed\"),   play_first_note_button_text = psychTestR::i18n(\"play_first_note\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli_midi_notes_both.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present midi notes in both visual and auditory modalities — present_stimuli_midi_notes_both","text":"play_first_note_button_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli_midi_notes_visual.html","id":null,"dir":"Reference","previous_headings":"","what":"Present MIDI notes as musical notation — present_stimuli_midi_notes_visual","title":"Present MIDI notes as musical notation — present_stimuli_midi_notes_visual","text":"Present MIDI notes musical notation","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli_midi_notes_visual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present MIDI notes as musical notation — present_stimuli_midi_notes_visual","text":"","code":"present_stimuli_midi_notes_visual(   stimuli,   note_length,   asChord = FALSE,   ascending,   id = \"sheet_music\",   present_div = TRUE,   clef = \"auto\",   transpose_visual_notation = 0L,   audio_play_button_id = \"playButton\",   sheet_music_start_hidden = FALSE,   durations = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/present_stimuli_midi_notes_visual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present MIDI notes as musical notation — present_stimuli_midi_notes_visual","text":"durations","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/promises_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Promise pipe operator\n#' — %...>%","title":"Promise pipe operator\n#' — %...>%","text":"Promise pipe operator #'","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/promises_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Promise pipe operator\n#' — %...>%","text":"","code":"lhs %...>% rhs"},{"path":"https://sebsilas.github.io/musicassessr/reference/promises_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Promise pipe operator\n#' — %...>%","text":"lhs promise object. rhs function handles result promise","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/promises_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Promise pipe operator\n#' — %...>%","text":"result promise resolves.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/psych_test_snap.html","id":null,"dir":"Reference","previous_headings":"","what":"Useful function for randomising which of 2 blocks goes first (or forcing it with force_snap) — psych_test_snap","title":"Useful function for randomising which of 2 blocks goes first (or forcing it with force_snap) — psych_test_snap","text":"Useful function randomising 2 blocks goes first (forcing force_snap)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/psych_test_snap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Useful function for randomising which of 2 blocks goes first (or forcing it with force_snap) — psych_test_snap","text":"","code":"psych_test_snap(   block1,   block2,   condition1_name = \"1\",   condition2_name = \"2\",   force_snap = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/psych_test_snap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Useful function for randomising which of 2 blocks goes first (or forcing it with force_snap) — psych_test_snap","text":"force_snap","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/read_melody.html","id":null,"dir":"Reference","previous_headings":"","what":"read a pYIN note track (outputted from Sonic Annotator or Tony) and make it nice — read_melody","title":"read a pYIN note track (outputted from Sonic Annotator or Tony) and make it nice — read_melody","text":"read pYIN note track (outputted Sonic Annotator Tony) make nice","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/read_melody.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read a pYIN note track (outputted from Sonic Annotator or Tony) and make it nice — read_melody","text":"","code":"read_melody(fname, style = c(\"sonic_annotator\", \"tony\"))"},{"path":"https://sebsilas.github.io/musicassessr/reference/read_melody.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read a pYIN note track (outputted from Sonic Annotator or Tony) and make it nice — read_melody","text":"style","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_and_present_audio_block.html","id":null,"dir":"Reference","previous_headings":"","what":"A block for playing melodies as audio then recording the participant response — record_and_present_audio_block","title":"A block for playing melodies as audio then recording the participant response — record_and_present_audio_block","text":"block playing melodies audio recording participant response","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_and_present_audio_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A block for playing melodies as audio then recording the participant response — record_and_present_audio_block","text":"","code":"record_and_present_audio_block(   files_list,   page_text = \"Press play to hear a melody, then sing it back.\",   get_answer = musicassessr::get_answer_pyin )"},{"path":"https://sebsilas.github.io/musicassessr/reference/record_and_present_audio_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A block for playing melodies as audio then recording the participant response — record_and_present_audio_block","text":"get_answer","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_audio_block.html","id":null,"dir":"Reference","previous_headings":"","what":"A block of record audio pages — record_audio_block","title":"A block of record audio pages — record_audio_block","text":"block record audio pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_audio_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A block of record audio pages — record_audio_block","text":"","code":"record_audio_block(   no_pages,   feedback = NULL,   get_answer = get_answer_pyin,   page_title = psychTestR::i18n(\"Record_audio\"),   page_text = psychTestR::i18n(\"click_to_record_audio\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/record_audio_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A block of record audio pages — record_audio_block","text":"page_title","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_audio_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Page to record audio in psychTestR — record_audio_page","title":"Page to record audio in psychTestR — record_audio_page","text":"Page record audio psychTestR","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_audio_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page to record audio in psychTestR — record_audio_page","text":"","code":"record_audio_page(   body = \"\",   label = \"record_audio_page\",   stimuli = NULL,   stimuli_reactive = FALSE,   page_text = \" \",   page_title = \" \",   interactive = FALSE,   get_answer = get_answer_save_audio_file,   answer_meta_data = tibble::tibble(),   record_button_text = psychTestR::i18n(\"Record\"),   stop_button_text = psychTestR::i18n(\"Stop\"),   record_duration = NULL,   on_complete = NULL,   save_answer = TRUE,   page_text_first = TRUE,   happy_with_response = FALSE,   attempts_left = NULL,   max_goes_forced = FALSE,   max_goes = 1,   show_progress = FALSE,   melody_no = 0,   total_no_melodies = 0,   volume_meter = FALSE,   volume_meter_type = \"default\",   show_sheet_music_after_record = FALSE,   show_record_button = TRUE,   reactive_melody_no = FALSE,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/record_audio_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page to record audio in psychTestR — record_audio_page","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_key_presses_block.html","id":null,"dir":"Reference","previous_headings":"","what":"A block of record key press pages — record_key_presses_block","title":"A block of record key press pages — record_key_presses_block","text":"block record key press pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_key_presses_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A block of record key press pages — record_key_presses_block","text":"","code":"record_key_presses_block(   no_pages,   feedback = NULL,   get_answer = get_answer_pyin,   page_title = psychTestR::i18n(\"Record_audio\"),   page_text = psychTestR::i18n(\"click_to_record_audio\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/record_key_presses_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A block of record key press pages — record_key_presses_block","text":"page_title","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_midi_block.html","id":null,"dir":"Reference","previous_headings":"","what":"A block of record MIDI pages — record_midi_block","title":"A block of record MIDI pages — record_midi_block","text":"block record MIDI pages","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_midi_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A block of record MIDI pages — record_midi_block","text":"","code":"record_midi_block(   no_pages,   feedback = NULL,   get_answer = get_answer_midi,   page_title = psychTestR::i18n(\"Record_audio\"),   page_text = psychTestR::i18n(\"click_to_record_audio\"),   autoInstantiate = TRUE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/record_midi_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A block of record MIDI pages — record_midi_block","text":"autoInstantiate","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_midi_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Page to record MIDI in psychTestR — record_midi_page","title":"Page to record MIDI in psychTestR — record_midi_page","text":"Page record MIDI psychTestR","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/record_midi_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page to record MIDI in psychTestR — record_midi_page","text":"","code":"record_midi_page(   body = \"\",   label = \"record_midi_page\",   stimuli = NULL,   stimuli_reactive = FALSE,   page_text = \" \",   page_title = \" \",   interactive = FALSE,   get_answer = get_answer_midi,   answer_meta_data = tibble::tibble(),   record_button_text = psychTestR::i18n(\"Record\"),   stop_button_text = psychTestR::i18n(\"Stop\"),   record_duration = NULL,   on_complete = NULL,   save_answer = TRUE,   page_text_first = TRUE,   happy_with_response = FALSE,   attempts_left = NULL,   max_goes_forced = FALSE,   autoInstantiate = FALSE,   midi_device = \"\",   max_goes = 1,   show_progress = FALSE,   melody_no = 0,   total_no_melodies = 0,   volume_meter = FALSE,   volume_meter_type = \"default\",   show_sheet_music_after_record = FALSE,   show_record_button = TRUE,   reactive_melody_no = FALSE,   ... )"},{"path":"https://sebsilas.github.io/musicassessr/reference/record_midi_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page to record MIDI in psychTestR — record_midi_page","text":"...","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/rel_to_abs_mel_mean_centred.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a melody from relative to absolute form by centering the mean of the stimuli on mean of the user's range. — rel_to_abs_mel_mean_centred","title":"Convert a melody from relative to absolute form by centering the mean of the stimuli on mean of the user's range. — rel_to_abs_mel_mean_centred","text":"Convert melody relative absolute form centering mean stimuli mean user's range.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/rel_to_abs_mel_mean_centred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a melody from relative to absolute form by centering the mean of the stimuli on mean of the user's range. — rel_to_abs_mel_mean_centred","text":"","code":"rel_to_abs_mel_mean_centred(   rel_melody,   bottom_range,   top_range,   plot = FALSE,   range = NULL,   transpose = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/rel_to_abs_mel_mean_centred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a melody from relative to absolute form by centering the mean of the stimuli on mean of the user's range. — rel_to_abs_mel_mean_centred","text":"transpose","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/render_scores_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Render scores in a shiny table — render_scores_table","title":"Render scores in a shiny table — render_scores_table","text":"Render scores shiny table","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/render_scores_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render scores in a shiny table — render_scores_table","text":"","code":"render_scores_table(res)"},{"path":"https://sebsilas.github.io/musicassessr/reference/render_scores_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render scores in a shiny table — render_scores_table","text":"res","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/rhythfuzz.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the rhythfuzz measure — rhythfuzz","title":"Compute the rhythfuzz measure — rhythfuzz","text":"Compute rhythfuzz measure","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/rhythfuzz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the rhythfuzz measure — rhythfuzz","text":"","code":"rhythfuzz(dur_vec1, dur_vec2)"},{"path":"https://sebsilas.github.io/musicassessr/reference/rhythfuzz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the rhythfuzz measure — rhythfuzz","text":"dur_vec2","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/rhythmic_melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Rhythmic melody trials block — rhythmic_melody_trials","title":"Rhythmic melody trials block — rhythmic_melody_trials","text":"Rhythmic melody trials block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/rhythmic_melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rhythmic melody trials block — rhythmic_melody_trials","text":"","code":"rhythmic_melody_trials(   var_name = \"rhythmic_melody\",   module_name = \"rhythmic_melodies\",   page_text = \"Press play to hear the melody. Play back the melody plus rhythm.\",   page_title = \"Play this melody plus rhythm\",   instruction_text =     \"Now you will hear melodies with rhythms. Please try and play the melodies with the correct rhythm.\",   sampler_function = sample_rhythmic,   item_bank,   num_items = integer(),   num_examples = 0L,   feedback = FALSE,   get_answer = get_answer_pyin_melodic_production_additional_measures,   sound = \"piano\",   page_type = \"record_audio_page\",   get_trial_characteristics_function = NULL,   item_characteristics_sampler_function = NULL,   item_characteristics_pars = NULL,   rel_to_abs_mel_function = rel_to_abs_mel_mean_centred,   max_goes = 3L,   max_goes_forced = FALSE,   display_modality = \"auditory\",   show_progress = TRUE,   sheet_music_start_hidden = FALSE,   sound_only_first_melody_note = FALSE,   sheet_music_id = \"sheet_music\",   give_first_melody_note = FALSE,   presampled = FALSE,   get_similarity_to_previous_melody = FALSE,   volume_meter = FALSE,   volume_meter_type = \"default\",   melody_block_paradigm = c(\"standard\", \"sing_melody_first\",     \"learn_phase_visual_display_modality\"),   singing_trials = TRUE,   review = FALSE,   phase = c(\"test\", \"learn\", \"review\"),   first_note_message = \"The first note is: \",   transposed_message = \"Please note, this is transposed for your instrument.\",   play_first_note_button_text = \"Play First Note\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/rhythmic_melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rhythmic melody trials block — rhythmic_melody_trials","text":"play_first_note_button_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_arrhythmic.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample arrhythmic — sample_arrhythmic","title":"Sample arrhythmic — sample_arrhythmic","text":"Sample arrhythmic","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_arrhythmic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample arrhythmic — sample_arrhythmic","text":"","code":"sample_arrhythmic(item_bank, num_items_arrhythmic, id = \"arrhythmic_melody\")"},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_arrhythmic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample arrhythmic — sample_arrhythmic","text":"id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_from_user_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the user's range (determined at test time) — sample_from_user_range","title":"Sample from the user's range (determined at test time) — sample_from_user_range","text":"Sample user's range (determined test time)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_from_user_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the user's range (determined at test time) — sample_from_user_range","text":"","code":"sample_from_user_range(no_to_sample)"},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_from_user_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the user's range (determined at test time) — sample_from_user_range","text":"no_to_sample","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_melody_in_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample melody in key — sample_melody_in_key","title":"Sample melody in key — sample_melody_in_key","text":"Sample melody key","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_melody_in_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample melody in key — sample_melody_in_key","text":"","code":"sample_melody_in_key(   item_bank,   inst,   bottom_range,   top_range,   difficulty,   length = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_melody_in_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample melody in key — sample_melody_in_key","text":"length","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly sample num_items per dataframe — sample_random","title":"Randomly sample num_items per dataframe — sample_random","text":"Randomly sample num_items per dataframe","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly sample num_items per dataframe — sample_random","text":"","code":"sample_random(item_bank, num_items)"},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly sample num_items per dataframe — sample_random","text":"num_items","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_review.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample review — sample_review","title":"Sample review — sample_review","text":"Sample review","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_review.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample review — sample_review","text":"","code":"sample_review(num_review_items, id = \"arrhythmic_melody\")"},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_review.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample review — sample_review","text":"id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_rhythmic.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample rhythmic — sample_rhythmic","title":"Sample rhythmic — sample_rhythmic","text":"Sample rhythmic","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_rhythmic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample rhythmic — sample_rhythmic","text":"","code":"sample_rhythmic(item_bank, num_items_rhythmic, id = \"rhythmic_melody\")"},{"path":"https://sebsilas.github.io/musicassessr/reference/sample_rhythmic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample rhythmic — sample_rhythmic","text":"id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melodic_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Score using melodic production measures — score_melodic_production","title":"Score using melodic production measures — score_melodic_production","text":"Score using melodic production measures","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melodic_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score using melodic production measures — score_melodic_production","text":"","code":"score_melodic_production(   user_melody_freq = numeric(),   user_melody_input = numeric(),   user_duration_input = numeric(),   user_onset_input = numeric(),   stimuli = numeric(),   stimuli_durations = numeric(),   pyin_pitch_track = tibble::tibble(),   user_response_midi_note_off = numeric(),   onsets_noteoff = numeric(),   answer_meta_data = tibble::tibble(),   as_tb = FALSE,   additional_scoring_measures = NULL,   with_pmi = FALSE,   compute_accuracy_measures_aligned = TRUE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melodic_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score using melodic production measures — score_melodic_production","text":"user_melody_freq Can NULL MIDI. compute_accuracy_measures_aligned","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melody_interval_precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Score melody interval precision — score_melody_interval_precision","title":"Score melody interval precision — score_melody_interval_precision","text":"Score melody interval precision","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melody_interval_precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score melody interval precision — score_melody_interval_precision","text":"","code":"score_melody_interval_precision(all_participant_trials)"},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melody_interval_precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score melody interval precision — score_melody_interval_precision","text":"all_participant_trials","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melody_note_precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Score melody note precision — score_melody_note_precision","title":"Score melody note precision — score_melody_note_precision","text":"Score melody note precision","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melody_note_precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score melody note precision — score_melody_note_precision","text":"","code":"score_melody_note_precision(all_participant_trials)"},{"path":"https://sebsilas.github.io/musicassessr/reference/score_melody_note_precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score melody note precision — score_melody_note_precision","text":"all_participant_trials","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/select_midi_device_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a page for selecting a MIDI device — select_midi_device_page","title":"Create a page for selecting a MIDI device — select_midi_device_page","text":"Create page selecting MIDI device","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/select_midi_device_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a page for selecting a MIDI device — select_midi_device_page","text":"","code":"select_midi_device_page(   title = \"Select MIDI device\",   message =     \"Your device should have been plugged in before you reached this page. It may take a moment to appear.\",   error_notification = \"No midi device found.\",   button_text = psychTestR::i18n(\"Next\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/select_midi_device_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a page for selecting a MIDI device — select_midi_device_page","text":"button_text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/select_musical_instrument_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Page to select what instrument the participant is using — select_musical_instrument_page","title":"Page to select what instrument the participant is using — select_musical_instrument_page","text":"Page select instrument participant using","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/select_musical_instrument_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page to select what instrument the participant is using — select_musical_instrument_page","text":"","code":"select_musical_instrument_page()"},{"path":"https://sebsilas.github.io/musicassessr/reference/select_voice_page.html","id":null,"dir":"Reference","previous_headings":"","what":"A page for selecting a voice before a play words page — select_voice_page","title":"A page for selecting a voice before a play words page — select_voice_page","text":"page selecting voice play words page","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/select_voice_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A page for selecting a voice before a play words page — select_voice_page","text":"","code":"select_voice_page()"},{"path":"https://sebsilas.github.io/musicassessr/reference/set_condition_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Allow the experimenter to set a condition at the beginning of the test — set_condition_page","title":"Allow the experimenter to set a condition at the beginning of the test — set_condition_page","text":"Allow experimenter set condition beginning test","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_condition_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allow the experimenter to set a condition at the beginning of the test — set_condition_page","text":"","code":"set_condition_page(block1, block2, condition1_name, condition2_name)"},{"path":"https://sebsilas.github.io/musicassessr/reference/set_condition_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allow the experimenter to set a condition at the beginning of the test — set_condition_page","text":"condition2_name","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_instrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Set instrument ID — set_instrument","title":"Set instrument ID — set_instrument","text":"Set instrument ID","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_instrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set instrument ID — set_instrument","text":"","code":"set_instrument(instrument_id = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/set_instrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set instrument ID — set_instrument","text":"instrument_id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_instrument_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a dummy range (to avoid having to manually set in the test) — set_instrument_range","title":"Set a dummy range (to avoid having to manually set in the test) — set_instrument_range","text":"Set dummy range (avoid manually set test)","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_instrument_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a dummy range (to avoid having to manually set in the test) — set_instrument_range","text":"","code":"set_instrument_range(bottom_range = 48, top_range = 72)"},{"path":"https://sebsilas.github.io/musicassessr/reference/set_instrument_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a dummy range (to avoid having to manually set in the test) — set_instrument_range","text":"top_range","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_response_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set response type for a test manually — set_response_type","title":"Set response type for a test manually — set_response_type","text":"Set response type test manually","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_response_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set response type for a test manually — set_response_type","text":"","code":"set_response_type(type = c(\"Microphone\", \"MIDI\"))"},{"path":"https://sebsilas.github.io/musicassessr/reference/set_response_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set response type for a test manually — set_response_type","text":"type","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Set test ID — set_test","title":"Set test ID — set_test","text":"Set test ID","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/set_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set test ID — set_test","text":"","code":"set_test(test_name, test_id = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/set_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set test ID — set_test","text":"test_id","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/setup_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup pages for musicassessr test — setup_pages","title":"Setup pages for musicassessr test — setup_pages","text":"Setup pages musicassessr test","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/setup_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup pages for musicassessr test — setup_pages","text":"","code":"setup_pages(   input_type = c(\"microphone\", \"midi_keyboard\", \"midi_keyboard_and_microphone\",     \"midi_keyboard_or_microphone\", \"key_presses\"),   headphones = TRUE,   SNR_test = TRUE,   min_SNR = 14,   get_user_info = TRUE,   demo = FALSE,   get_instrument_range = FALSE,   absolute_url = character(),   select_instrument = FALSE,   get_instrument_range_musical_notation = FALSE,   adjust_range = FALSE,   test_type = c(\"voice\", \"instrument\"),   microphone_test = TRUE,   allow_repeat_SNR_tests = TRUE,   report_SNR = FALSE,   concise_wording = TRUE,   skip_setup = FALSE,   get_self_chosen_anonymous_id = FALSE,   musical_instrument = FALSE,   allow_SNR_failure = FALSE,   requirements_page = TRUE,   playful_volume_meter_setup = FALSE,   fake_range = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/setup_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup pages for musicassessr test — setup_pages","text":"input_type form musicassessr test. headphones Deploy headphone setup page. SNR_test Deploy SNR test. min_SNR minimum accepted SNR value. get_user_info Get user info browser. demo Deploy demo test. get_instrument_range Get user's pitch/instrument range test time. absolute_url production, absolute URL. select_instrument Deploy instrument selection page. get_instrument_range_musical_notation displaying instrument range, provide visual music notation. adjust_range Adjust range. test_type Voice vs. instrument test. microphone_test Deploy microphone test page. allow_repeat_SNR_tests Allow repeated SNR tests, FALSE, participant gets one go test fail SNR test fails. report_SNR SNR reported user. concise_wording Whether wording concise . skip_setup Whether skip setup. Can TRUE (skip whole setup), FALSE \"except_microphone\" (setup microphone steps). get_self_chosen_anonymous_id Whether ask participant provide anonymous ID. musical_instrument Whether participant required musical instrument. allow_SNR_failure TRUE, allow user continue even fail SNR test. requirements_page Show requirements page? playful_volume_meter_setup additional functionality demo playful volume meter? fake_range instrument/voice range faked default?","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/setup_pages_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup page options for a musicassessr test — setup_pages_options","title":"Setup page options for a musicassessr test — setup_pages_options","text":"Setup page options musicassessr test","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/setup_pages_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup page options for a musicassessr test — setup_pages_options","text":"","code":"setup_pages_options(   input_type = c(\"microphone\", \"midi_keyboard\", \"midi_keyboard_and_microphone\",     \"midi_keyboard_or_microphone\"),   headphones = TRUE,   SNR_test = TRUE,   min_SNR = 14,   get_user_info = TRUE,   demo = FALSE,   get_instrument_range = FALSE,   absolute_url = \"https://www.adaptiveeartraining.com\",   select_instrument = FALSE,   get_instrument_range_musical_notation = FALSE,   adjust_range = FALSE,   test_type = c(\"voice\", \"instrument\"),   microphone_test = TRUE,   allow_repeat_SNR_tests = TRUE,   report_SNR = FALSE,   concise_wording = TRUE,   skip_setup = FALSE,   get_self_chosen_anonymous_id = FALSE,   musical_instrument = FALSE,   fake_range = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/setup_pages_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup page options for a musicassessr test — setup_pages_options","text":"input_type form musicassessr test. headphones Deploy headphone setup page. SNR_test Deploy SNR test. min_SNR minimum accepted SNR value. get_user_info Get user info browser. demo Deploy demo test. get_instrument_range Get user's pitch/instrument range test time. absolute_url production, absolute URL. select_instrument Deploy instrument selection page. get_instrument_range_musical_notation displaying instrument range, provide visual music notation. adjust_range Adjust range. test_type Voice vs. instrument test. microphone_test Deploy microphone test page. allow_repeat_SNR_tests Allow repeated SNR tests, FALSE, participant gets one go test fail SNR test fails. report_SNR SNR reported user. concise_wording wording used concise version . skip_setup Whether skip setup. Can TRUE (skip whole setup), FALSE \"except_microphone\" (setup microphone steps). get_self_chosen_anonymous_id Whether ask participant provide anonymous ID. musical_instrument Whether participant required musical instrument. fake_range range faked?","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/share_score_page.html","id":null,"dir":"Reference","previous_headings":"","what":"A page for sharing scores. — share_score_page","title":"A page for sharing scores. — share_score_page","text":"page sharing scores.","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/share_score_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A page for sharing scores. — share_score_page","text":"","code":"share_score_page(   test_name,   url,   hashtag = \"CanISing\",   socials = TRUE,   leaderboard_name = \"leaderboard.rda\",   distribution_mean = NULL,   distribution_sd = NULL,   data_not_from_leaderboard = NULL )"},{"path":"https://sebsilas.github.io/musicassessr/reference/share_score_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A page for sharing scores. — share_score_page","text":"data_not_from_leaderboard","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_arrhythmic_melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Sing arrhythmic melody trial block — sing_arrhythmic_melody_trials","title":"Sing arrhythmic melody trial block — sing_arrhythmic_melody_trials","text":"Sing arrhythmic melody trial block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_arrhythmic_melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sing arrhythmic melody trial block — sing_arrhythmic_melody_trials","text":"","code":"sing_arrhythmic_melody_trials(   var_name = \"arrhythmic_melody\",   module_name = \"sing_arrhythmic_melodies\",   page_text = psychTestR::i18n(\"sing_melody_page_text\"),   page_title = psychTestR::i18n(\"Sing_the_Melody\"),   instruction_text = psychTestR::i18n(\"sing_melody_instruction_text\"),   sampler_function = sample_arrhythmic,   item_bank,   num_items = integer(),   num_examples = 0L,   feedback = FALSE,   get_answer = get_answer_pyin_melodic_production_additional_measures,   sound = \"piano\",   page_type = \"record_audio_page\",   get_trial_characteristics_function = NULL,   item_characteristics_sampler_function = NULL,   item_characteristics_pars = NULL,   rel_to_abs_mel_function = rel_to_abs_mel_mean_centred,   max_goes = 3L,   max_goes_forced = FALSE,   display_modality = \"auditory\",   show_progress = TRUE,   get_similarity_to_previous_melody = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_arrhythmic_melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sing arrhythmic melody trial block — sing_arrhythmic_melody_trials","text":"get_similarity_to_previous_melody","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_happy_birthday_page.html","id":null,"dir":"Reference","previous_headings":"","what":"A page to identify a user's singing range by asking them to sing Happy Birthday — sing_happy_birthday_page","title":"A page to identify a user's singing range by asking them to sing Happy Birthday — sing_happy_birthday_page","text":"page identify user's singing range asking sing Happy Birthday","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_happy_birthday_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A page to identify a user's singing range by asking them to sing Happy Birthday — sing_happy_birthday_page","text":"","code":"sing_happy_birthday_page(   feedback = FALSE,   label = \"sing_hbd\",   text = psychTestR::i18n(\"sing_hbd\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_happy_birthday_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A page to identify a user's singing range by asking them to sing Happy Birthday — sing_happy_birthday_page","text":"text","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_rhythmic_melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Sing rhythmic melody trial block — sing_rhythmic_melody_trials","title":"Sing rhythmic melody trial block — sing_rhythmic_melody_trials","text":"Sing rhythmic melody trial block","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_rhythmic_melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sing rhythmic melody trial block — sing_rhythmic_melody_trials","text":"","code":"sing_rhythmic_melody_trials(   var_name = \"rhythmic_melody\",   module_name = \"sing_rhythmic_melodies\",   page_text = psychTestR::i18n(\"sing_rhythmic_melodies_page_text\"),   page_title = psychTestR::i18n(\"sing_rhythmic_melodies_page_title\"),   instruction_text = psychTestR::i18n(\"sing_rhythmic_melodies_instruction_text\"),   sampler_function = sample_arrhythmic,   item_bank,   num_items = integer(),   num_examples = 0L,   feedback = FALSE,   get_answer = get_answer_pyin_melodic_production_additional_measures,   sound = \"piano\",   page_type = \"record_audio_page\",   get_trial_characteristics_function = NULL,   item_characteristics_sampler_function = NULL,   item_characteristics_pars = NULL,   rel_to_abs_mel_function = rel_to_abs_mel_mean_centred,   max_goes = 3L,   max_goes_forced = FALSE,   display_modality = \"auditory\",   show_progress = TRUE,   get_similarity_to_previous_melody = FALSE )"},{"path":"https://sebsilas.github.io/musicassessr/reference/sing_rhythmic_melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sing rhythmic melody trial block — sing_rhythmic_melody_trials","text":"get_similarity_to_previous_melody","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/test_acronym_to_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Test acronym to its full name — test_acronym_to_name","title":"Test acronym to its full name — test_acronym_to_name","text":"Test acronym full name","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/test_acronym_to_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test acronym to its full name — test_acronym_to_name","text":"","code":"test_acronym_to_name(acronym)"},{"path":"https://sebsilas.github.io/musicassessr/reference/test_acronym_to_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test acronym to its full name — test_acronym_to_name","text":"acronym","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/test_headphones_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Test headphones page — test_headphones_page","title":"Test headphones page — test_headphones_page","text":"Test headphones page","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/test_headphones_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test headphones page — test_headphones_page","text":"","code":"test_headphones_page(concise_wording = FALSE)"},{"path":"https://sebsilas.github.io/musicassessr/reference/test_headphones_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test headphones page — test_headphones_page","text":"concise_wording","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/test_recording_app.html","id":null,"dir":"Reference","previous_headings":"","what":"A quick app to test recording functionality — test_recording_app","title":"A quick app to test recording functionality — test_recording_app","text":"quick app test recording functionality","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/test_recording_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A quick app to test recording functionality — test_recording_app","text":"","code":"test_recording_app(copy_audio_to = NULL)"},{"path":"https://sebsilas.github.io/musicassessr/reference/tidy_melodies.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy melodies from psychTestR results object — tidy_melodies","title":"Tidy melodies from psychTestR results object — tidy_melodies","text":"Tidy melodies psychTestR results object","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/tidy_melodies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy melodies from psychTestR results object — tidy_melodies","text":"","code":"tidy_melodies(   melody_results,   use_for_production = c(\"production\", \"pyin_pitch_track\") )"},{"path":"https://sebsilas.github.io/musicassessr/reference/tidy_melodies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy melodies from psychTestR results object — tidy_melodies","text":"melody_results melody results psychTestR. use_for_production get_answer output use production (removed).","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/to_string_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Useful (but unsophisticated) util to collapse a df into a pretty string df — to_string_df","title":"Useful (but unsophisticated) util to collapse a df into a pretty string df — to_string_df","text":"Useful (unsophisticated) util collapse df pretty string df","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/to_string_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Useful (but unsophisticated) util to collapse a df into a pretty string df — to_string_df","text":"","code":"to_string_df(df, exclude_cols = character())"},{"path":"https://sebsilas.github.io/musicassessr/reference/to_string_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Useful (but unsophisticated) util to collapse a df into a pretty string df — to_string_df","text":"exclude_cols","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/translate_from_dict.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate an item from musicassessr dictionary — translate_from_dict","title":"Translate an item from musicassessr dictionary — translate_from_dict","text":"Translate item musicassessr dictionary","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/translate_from_dict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate an item from musicassessr dictionary — translate_from_dict","text":"","code":"translate_from_dict(non_english_translation, language)"},{"path":"https://sebsilas.github.io/musicassessr/reference/translate_from_dict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate an item from musicassessr dictionary — translate_from_dict","text":"language","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/validate_user_entry_into_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate user entry to test based on session token look up in PostgreSQL DB — validate_user_entry_into_test","title":"Validate user entry to test based on session token look up in PostgreSQL DB — validate_user_entry_into_test","text":"Validate user entry test based session token look PostgreSQL DB","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/validate_user_entry_into_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate user entry to test based on session token look up in PostgreSQL DB — validate_user_entry_into_test","text":"","code":"validate_user_entry_into_test(validate_user_entry_into_test, elts)"},{"path":"https://sebsilas.github.io/musicassessr/reference/validate_user_entry_into_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate user entry to test based on session token look up in PostgreSQL DB — validate_user_entry_into_test","text":"elts","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/wjd_audio_melody_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"A trial block which plays back real audio from the Weimar Jazz Database — wjd_audio_melody_trials","title":"A trial block which plays back real audio from the Weimar Jazz Database — wjd_audio_melody_trials","text":"trial block plays back real audio Weimar Jazz Database","code":""},{"path":"https://sebsilas.github.io/musicassessr/reference/wjd_audio_melody_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A trial block which plays back real audio from the Weimar Jazz Database — wjd_audio_melody_trials","text":"","code":"wjd_audio_melody_trials(   item_bank,   num_items,   num_examples = 0L,   feedback = FALSE,   item_length = c(3, 15),   get_answer = get_answer_pyin_melodic_production_additional_measures,   sound = \"piano\",   page_text =     \"Press play to hear the melody, then play it back as best as you can when it finishes.\",   page_title = \"Play the Melody And Rhythm from Audio\",   instruction_text =     \"Now you will hear some melodies as audio. Please try and play back the melodies and rhythms as best as you can.\" )"},{"path":"https://sebsilas.github.io/musicassessr/reference/wjd_audio_melody_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A trial block which plays back real audio from the Weimar Jazz Database — wjd_audio_melody_trials","text":"instruction_text","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]}]
